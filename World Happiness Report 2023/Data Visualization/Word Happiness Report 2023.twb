<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20232.23.0909.1159                               -->
<workbook original-version='18.1' source-build='2023.2.2 (20232.23.0909.1159)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <BasicButtonObject />
    <BasicButtonObjectTextSupport />
    <Heatmap />
    <MapAttribution2 />
    <MapboxVectorBuiltInAndUserStyles />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelExtractV2.true...ObjectModelExtractV2 />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <style>
    <style-rule element='all'>
      <format attr='color' value='#000000' />
    </style-rule>
    <_.fcp.MarkAnimation.true...style-rule element='animation'>
      <format attr='animation-on' value='ao-on' />
      <format attr='animation-duration' value='1' />
      <format attr='animation-style' value='as-synced' />
    </_.fcp.MarkAnimation.true...style-rule>
  </style>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Target' datatype='real' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='1.0'>
        <calculation class='tableau' formula='1.0' />
      </column>
      <column caption='Quarter_year Parameter' datatype='date' default-format='*yyyy' name='[Quarter_year Parameter]' param-domain-type='list' role='measure' type='quantitative' value='#2021-01-01#'>
        <calculation class='tableau' formula='#2021-01-01#' />
        <members>
          <member value='#2010-01-01#' />
          <member value='#2011-01-01#' />
          <member value='#2012-01-01#' />
          <member value='#2013-01-01#' />
          <member value='#2014-01-01#' />
          <member value='#2015-01-01#' />
          <member value='#2016-01-01#' />
          <member value='#2017-01-01#' />
          <member value='#2018-01-01#' />
          <member value='#2019-01-01#' />
          <member value='#2020-01-01#' />
          <member value='#2021-01-01#' />
          <member value='#2022-01-01#' />
          <member value='#2023-01-01#' />
        </members>
      </column>
    </datasource>
    <datasource caption='World_Happiness_score' inline='true' name='federated.0c2lahi0kxngap1bw0hhl140v8wj' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='World_Happiness_score' name='excel-direct.01qackn1pmljzw11q76y919ohkns'>
            <connection class='excel-direct' cleaning='yes' compat='no' dataRefreshTime='' filename='C:/Users/laksh/Documents/Documents/Data_Analytics_For_Business/Challenges_Data_Analytics/Apexon Data Viz/Datasets/Mental Health/Final dataset_V2/World_Happiness_score.csv' interpretationMode='1' password='' server='' validate='no' />
          </named-connection>
          <named-connection caption='World_Happiness_score (2)' name='textscan.0w8tvkh0f4o4m619fuhz605c4sxo'>
            <connection class='textscan' directory='C:/Users/laksh/Documents/Documents/Data_Analytics_For_Business/Challenges_Data_Analytics/Apexon Data Viz/Datasets/Mental Health/Final dataset_V2' filename='World_Happiness_score.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0w8tvkh0f4o4m619fuhz605c4sxo' name='World_Happiness_score.csv' table='[World_Happiness_score#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
            <column datatype='string' name='Country' ordinal='0' />
            <column datatype='date' date-parse-format='yyyy' name='Year' ordinal='1' />
            <column datatype='real' name='Happiness Score' ordinal='2' />
            <column datatype='real' name='GDP per Capita' ordinal='3' />
            <column datatype='real' name='Social Support' ordinal='4' />
            <column datatype='real' name='Life Expectancy' ordinal='5' />
            <column datatype='real' name='Freedom' ordinal='6' />
            <column datatype='real' name='Generosity' ordinal='7' />
            <column datatype='real' name='Corruption' ordinal='8' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.0w8tvkh0f4o4m619fuhz605c4sxo' name='World_Happiness_score.csv' table='[World_Happiness_score#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
            <column datatype='string' name='Country' ordinal='0' />
            <column datatype='date' date-parse-format='yyyy' name='Year' ordinal='1' />
            <column datatype='real' name='Happiness Score' ordinal='2' />
            <column datatype='real' name='GDP per Capita' ordinal='3' />
            <column datatype='real' name='Social Support' ordinal='4' />
            <column datatype='real' name='Life Expectancy' ordinal='5' />
            <column datatype='real' name='Freedom' ordinal='6' />
            <column datatype='real' name='Generosity' ordinal='7' />
            <column datatype='real' name='Corruption' ordinal='8' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[World_Happiness_score.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_CA&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[World_Happiness_score.csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[World_Happiness_score.csv_3659220C991C4D39AAD1BD347EDF1893]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[World_Happiness_score.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>1</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[World_Happiness_score.csv_3659220C991C4D39AAD1BD347EDF1893]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Happiness Score</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Happiness Score]</local-name>
            <parent-name>[World_Happiness_score.csv]</parent-name>
            <remote-alias>Happiness Score</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[World_Happiness_score.csv_3659220C991C4D39AAD1BD347EDF1893]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GDP per Capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[GDP per Capita]</local-name>
            <parent-name>[World_Happiness_score.csv]</parent-name>
            <remote-alias>GDP per Capita</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[World_Happiness_score.csv_3659220C991C4D39AAD1BD347EDF1893]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Social Support</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Social Support]</local-name>
            <parent-name>[World_Happiness_score.csv]</parent-name>
            <remote-alias>Social Support</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[World_Happiness_score.csv_3659220C991C4D39AAD1BD347EDF1893]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Life Expectancy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Life Expectancy]</local-name>
            <parent-name>[World_Happiness_score.csv]</parent-name>
            <remote-alias>Life Expectancy</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[World_Happiness_score.csv_3659220C991C4D39AAD1BD347EDF1893]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Freedom</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Freedom]</local-name>
            <parent-name>[World_Happiness_score.csv]</parent-name>
            <remote-alias>Freedom</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[World_Happiness_score.csv_3659220C991C4D39AAD1BD347EDF1893]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Generosity</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Generosity]</local-name>
            <parent-name>[World_Happiness_score.csv]</parent-name>
            <remote-alias>Generosity</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[World_Happiness_score.csv_3659220C991C4D39AAD1BD347EDF1893]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Corruption</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Corruption]</local-name>
            <parent-name>[World_Happiness_score.csv]</parent-name>
            <remote-alias>Corruption</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[World_Happiness_score.csv_3659220C991C4D39AAD1BD347EDF1893]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.0c2lahi0kxngap1bw0hhl140v8wj].[max:Corruption:qk]&quot;' value='Corruption' />
          <alias key='&quot;[federated.0c2lahi0kxngap1bw0hhl140v8wj].[max:Freedom:qk]&quot;' value='Freedom' />
          <alias key='&quot;[federated.0c2lahi0kxngap1bw0hhl140v8wj].[max:GDP per Capita:qk]&quot;' value='GDP' />
          <alias key='&quot;[federated.0c2lahi0kxngap1bw0hhl140v8wj].[max:Generosity:qk]&quot;' value='Generosity' />
          <alias key='&quot;[federated.0c2lahi0kxngap1bw0hhl140v8wj].[max:Happiness Score:qk]&quot;' value='Happiness Score' />
          <alias key='&quot;[federated.0c2lahi0kxngap1bw0hhl140v8wj].[max:Life Expectancy:qk]&quot;' value='Life Expectancy' />
          <alias key='&quot;[federated.0c2lahi0kxngap1bw0hhl140v8wj].[max:Social Support:qk]&quot;' value='Social Support' />
          <alias key='&quot;[federated.0c2lahi0kxngap1bw0hhl140v8wj].[usr:Calculation_1447344378981142528:qk:1]&quot;' value='CORR_SocialSupport' />
          <alias key='&quot;[federated.0c2lahi0kxngap1bw0hhl140v8wj].[usr:Calculation_1447344378982109185:qk:1]&quot;' value='CORR_Corruption' />
          <alias key='&quot;[federated.0c2lahi0kxngap1bw0hhl140v8wj].[usr:Calculation_1447344379008798722:qk:3]&quot;' value='CORR_Generosity' />
          <alias key='&quot;[federated.0c2lahi0kxngap1bw0hhl140v8wj].[usr:Calculation_1447344379008962563:qk:3]&quot;' value='CORR_Freedom' />
          <alias key='&quot;[federated.0c2lahi0kxngap1bw0hhl140v8wj].[usr:Calculation_1447344379009167364:qk:3]&quot;' value='CORR_GDP Per Capital' />
          <alias key='&quot;[federated.0c2lahi0kxngap1bw0hhl140v8wj].[usr:Calculation_1447344379010424837:qk:1]&quot;' value='CORR_LifeExpectancy' />
        </aliases>
      </column>
      <column caption='Quarter_year' datatype='date' datatype-customized='true' name='[Calculation_1294503465992212484]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='DATE(DATETRUNC(&apos;quarter&apos;, [Year]))' />
      </column>
      <column caption='Year_color' datatype='boolean' name='[Calculation_1294503465994952709]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Calculation_1294503465992212484] =[Parameters].[Quarter_year Parameter]' />
      </column>
      <column caption='Factor Analysis' datatype='integer' name='[Calculation_1319554740376866817]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Happiness Score] &gt;= 6.4 AND&#13;&#10;   [GDP per Capita] &gt;= 10.5 AND&#13;&#10;   [Social Support] &gt; 0.9 AND&#13;&#10;   [Life Expectancy] &gt; 69.9 AND&#13;&#10;   [Freedom] &gt; 0.88 AND&#13;&#10;   [Generosity] &gt; 0.12 AND&#13;&#10;   [Corruption] &lt; 0.66 THEN&#13;&#10;   1&#13;&#10;ELSEIF [Corruption] &gt; 0.87 THEN&#13;&#10;   1&#13;&#10;ELSE&#13;&#10;   0&#13;&#10;END' />
      </column>
      <column caption='Correlation_SocialSupport' datatype='real' name='[Calculation_1447344378981142528]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CORR([Happiness Score],[Social Support])' />
      </column>
      <column caption='Correlation_Corruption' datatype='real' name='[Calculation_1447344378982109185]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CORR([Happiness Score],[Corruption])' />
      </column>
      <column caption='Correlation_Generosity' datatype='real' name='[Calculation_1447344379008798722]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CORR([Happiness Score],[Generosity])' />
      </column>
      <column caption='Correlation_Freedom' datatype='real' name='[Calculation_1447344379008962563]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CORR([Happiness Score],[Freedom])' />
      </column>
      <column caption='Correlation_GDP' datatype='real' name='[Calculation_1447344379009167364]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CORR([Happiness Score],[GDP per Capita])' />
      </column>
      <column caption='Correlation_LifeExpectancy' datatype='real' name='[Calculation_1447344379010424837]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CORR([Happiness Score],[Life Expectancy])' />
      </column>
      <column caption='Zero Axis' datatype='integer' name='[Calculation_1447344379042979851]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='0' />
      </column>
      <column caption='Agg_Happiness_Score' datatype='real' name='[Calculation_1447344379044208652]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Happiness Score])' />
      </column>
      <column caption='Zero Text' datatype='real' name='[Calculation_1451847979930402816]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='min(0.0)' />
      </column>
      <column caption='Axix Rank' datatype='real' name='[Calculation_1451847979931611137]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='Min(0.0)' />
      </column>
      <column caption='Agg_Corruption' datatype='real' name='[Calculation_1451847980043198466]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Corruption])' />
      </column>
      <column caption='Happiness_2023' datatype='real' name='[Calculation_1560778794350235651]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='if year([Year])=2023 then [Happiness Score] END' />
      </column>
      <column caption='Happiness_2017' datatype='real' name='[Calculation_1560778794350825476]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='if year([Year])=2017 then [Happiness Score] END' />
      </column>
      <column caption='Happiness_Ratio' datatype='real' name='[Calculation_2406048150383206400]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Happiness Score]/10' />
      </column>
      <column caption='Happiness_Rank' datatype='integer' name='[Calculation_2406048150452195330]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='RANK(ATTR([Happiness Score]),&apos;asc&apos;)'>
          <table-calc ordering-field='[federated.0c2lahi0kxngap1bw0hhl140v8wj].[Country]' ordering-type='Field' />
        </calculation>
      </column>
      <column datatype='real' name='[Corruption]' role='measure' type='quantitative' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='real' name='[Freedom]' role='measure' type='quantitative' />
      <column datatype='real' name='[GDP per Capita]' role='measure' type='quantitative' />
      <column datatype='real' name='[Generosity]' role='measure' type='quantitative' />
      <column datatype='real' name='[Happiness Score]' role='measure' type='quantitative' />
      <column datatype='real' name='[Life Expectancy]' role='measure' type='quantitative' />
      <column datatype='real' name='[Social Support]' role='measure' type='quantitative' />
      <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='World_Happiness_score.csv' datatype='table' name='[__tableau_internal_object_id__].[World_Happiness_score.csv_3659220C991C4D39AAD1BD347EDF1893]' role='measure' type='quantitative' />
      <column-instance column='[__tableau_internal_object_id__].[World_Happiness_score.csv_3659220C991C4D39AAD1BD347EDF1893]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:World_Happiness_score.csv_3659220C991C4D39AAD1BD347EDF1893:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Country]' derivation='Attribute' name='[attr:Country:nk]' pivot='key' type='nominal' />
      <column-instance column='[Happiness Score]' derivation='Attribute' name='[attr:Happiness Score:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_2406048150383206400]' derivation='Avg' name='[avg:Calculation_2406048150383206400:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Corruption]' derivation='Avg' name='[avg:Corruption:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Freedom]' derivation='Avg' name='[avg:Freedom:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Happiness Score]' derivation='Avg' name='[avg:Happiness Score:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Country]' derivation='CountD' name='[ctd:Country:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1447344378982109185]' derivation='User' name='[diff:usr:Calculation_1447344378982109185:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Columns' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_1319554740376866817]' derivation='Max' name='[max:Calculation_1319554740376866817:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_2406048150383206400]' derivation='Max' name='[max:Calculation_2406048150383206400:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Corruption]' derivation='Max' name='[max:Corruption:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Country]' derivation='Max' name='[max:Country:nk]' pivot='key' type='nominal' />
      <column-instance column='[Freedom]' derivation='Max' name='[max:Freedom:qk]' pivot='key' type='quantitative' />
      <column-instance column='[GDP per Capita]' derivation='Max' name='[max:GDP per Capita:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Generosity]' derivation='Max' name='[max:Generosity:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Happiness Score]' derivation='Max' name='[max:Happiness Score:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Life Expectancy]' derivation='Max' name='[max:Life Expectancy:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Social Support]' derivation='Max' name='[max:Social Support:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_2406048150383206400]' derivation='Median' name='[med:Calculation_2406048150383206400:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_2406048150383206400]' derivation='Min' name='[min:Calculation_2406048150383206400:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Country]' derivation='Min' name='[min:Country:nk]' pivot='key' type='nominal' />
      <column-instance column='[Happiness Score]' derivation='Min' name='[min:Happiness Score:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Corruption]' derivation='None' name='[none:Corruption:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Corruption]' derivation='None' name='[none:Corruption:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
      <column-instance column='[Happiness Score]' derivation='None' name='[none:Happiness Score:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Life Expectancy]' derivation='None' name='[none:Life Expectancy:ok]' pivot='key' type='ordinal' />
      <column-instance aggregation-param='25' column='[Happiness Score]' derivation='Percentile' name='[prc25:Happiness Score:qk]' pivot='key' type='quantitative' />
      <column-instance aggregation-param='50' column='[Happiness Score]' derivation='Percentile' name='[prc50:Happiness Score:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1319554740376866817]' derivation='Sum' name='[sum:Calculation_1319554740376866817:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1447344379042979851]' derivation='Sum' name='[sum:Calculation_1447344379042979851:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1451847979930402816]' derivation='Sum' name='[sum:Calculation_1451847979930402816:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1560778794350235651]' derivation='Sum' name='[sum:Calculation_1560778794350235651:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1560778794350825476]' derivation='Sum' name='[sum:Calculation_1560778794350825476:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_2406048150383206400]' derivation='Sum' name='[sum:Calculation_2406048150383206400:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Corruption]' derivation='Sum' name='[sum:Corruption:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Freedom]' derivation='Sum' name='[sum:Freedom:qk]' pivot='key' type='quantitative' />
      <column-instance column='[GDP per Capita]' derivation='Sum' name='[sum:GDP per Capita:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Generosity]' derivation='Sum' name='[sum:Generosity:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Happiness Score]' derivation='Sum' name='[sum:Happiness Score:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Happiness Score]' derivation='Sum' name='[sum:Happiness Score:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Life Expectancy]' derivation='Sum' name='[sum:Life Expectancy:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Social Support]' derivation='Sum' name='[sum:Social Support:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1447344378981142528]' derivation='User' name='[usr:Calculation_1447344378981142528:qk:1]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1447344378982109185]' derivation='User' name='[usr:Calculation_1447344378982109185:qk:1]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1447344379008798722]' derivation='User' name='[usr:Calculation_1447344379008798722:qk:3]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1447344379008962563]' derivation='User' name='[usr:Calculation_1447344379008962563:qk:3]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1447344379009167364]' derivation='User' name='[usr:Calculation_1447344379009167364:qk:3]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1447344379010424837]' derivation='User' name='[usr:Calculation_1447344379010424837:qk:1]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1447344379044208652]' derivation='User' name='[usr:Calculation_1447344379044208652:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1451847980043198466]' derivation='User' name='[usr:Calculation_1451847980043198466:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_2406048150383206400]' derivation='User' name='[usr:Calculation_2406048150383206400:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_2406048150452195330]' derivation='User' name='[usr:Calculation_2406048150452195330:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[federated.0c2lahi0kxngap1bw0hhl140v8wj].[Country]' ordering-type='Field' />
      </column-instance>
      <column-instance column='[Calculation_1447344378982109185]' derivation='User' name='[win:usr:Calculation_1447344378982109185:qk]' pivot='key' type='quantitative'>
        <table-calc aggregation='Avg' from='-2' ordering-type='Columns' to='0' type='WindowTotal' window-options='IncludeCurrent' />
      </column-instance>
      <mapped-images>
        <mapped-image caption='Happy' expression='file:///C:/Users/laksh/Downloads/happy.png' name='[MappedImage1]'>
          <mapping bottom='90.0' left='90.0' right='50.0' top='50.0' x='[Happiness Score]' y='[Happiness Score]' />
        </mapped-image>
      </mapped-images>
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/laksh/Documents/Documents/My Tableau Repository/Datasources/2023.2/en_US-US/World_Happiness_score.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='02/02/2024 01:56:45 AM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh increment-key='' incremental-updates='false'>
            <refresh-event add-from-file-path='World_Happiness_score' increment-value='%null%' refresh-type='create' rows-inserted='1894' timestamp-start='2024-02-02 01:56:45.068' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Country</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Country</remote-alias>
              <ordinal>0</ordinal>
              <family>World_Happiness_score.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>162</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[World_Happiness_score.csv_3659220C991C4D39AAD1BD347EDF1893]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Year</remote-name>
              <remote-type>133</remote-type>
              <local-name>[Year]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Year</remote-alias>
              <ordinal>1</ordinal>
              <family>World_Happiness_score.csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>14</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[World_Happiness_score.csv_3659220C991C4D39AAD1BD347EDF1893]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Happiness Score</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Happiness Score]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Happiness Score</remote-alias>
              <ordinal>2</ordinal>
              <family>World_Happiness_score.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1894</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[World_Happiness_score.csv_3659220C991C4D39AAD1BD347EDF1893]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>GDP per Capita</remote-name>
              <remote-type>5</remote-type>
              <local-name>[GDP per Capita]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>GDP per Capita</remote-alias>
              <ordinal>3</ordinal>
              <family>World_Happiness_score.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1560</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[World_Happiness_score.csv_3659220C991C4D39AAD1BD347EDF1893]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Social Support</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Social Support]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Social Support</remote-alias>
              <ordinal>4</ordinal>
              <family>World_Happiness_score.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1860</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[World_Happiness_score.csv_3659220C991C4D39AAD1BD347EDF1893]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Life Expectancy</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Life Expectancy]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Life Expectancy</remote-alias>
              <ordinal>5</ordinal>
              <family>World_Happiness_score.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>870</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[World_Happiness_score.csv_3659220C991C4D39AAD1BD347EDF1893]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Freedom</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Freedom]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Freedom</remote-alias>
              <ordinal>6</ordinal>
              <family>World_Happiness_score.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1822</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[World_Happiness_score.csv_3659220C991C4D39AAD1BD347EDF1893]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Generosity</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Generosity]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Generosity</remote-alias>
              <ordinal>7</ordinal>
              <family>World_Happiness_score.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1545</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[World_Happiness_score.csv_3659220C991C4D39AAD1BD347EDF1893]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Corruption</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Corruption]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Corruption</remote-alias>
              <ordinal>8</ordinal>
              <family>World_Happiness_score.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1816</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[World_Happiness_score.csv_3659220C991C4D39AAD1BD347EDF1893]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' rowDisplayCount='2000' show-hidden-fields='true' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='shape' field='[:Measure Names]' type='shape'>
            <map to='asterisk'>
              <bucket>&quot;[federated.0c2lahi0kxngap1bw0hhl140v8wj].[attr:Happiness Score:qk]&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;[federated.0c2lahi0kxngap1bw0hhl140v8wj].[avg:Happiness Score:qk]&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;[federated.0c2lahi0kxngap1bw0hhl140v8wj].[max:Happiness Score:qk]&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;[federated.0c2lahi0kxngap1bw0hhl140v8wj].[min:Happiness Score:qk]&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;[federated.0c2lahi0kxngap1bw0hhl140v8wj].[prc25:Happiness Score:qk]&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;[federated.0c2lahi0kxngap1bw0hhl140v8wj].[prc50:Happiness Score:qk]&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;[federated.0c2lahi0kxngap1bw0hhl140v8wj].[sum:Happiness Score:qk]&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;[federated.0c2lahi0kxngap1bw0hhl140v8wj].[avg:Corruption:qk]&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;[federated.0c2lahi0kxngap1bw0hhl140v8wj].[max:Corruption:qk]&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;[federated.0c2lahi0kxngap1bw0hhl140v8wj].[none:Happiness Score:qk]&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;[federated.0c2lahi0kxngap1bw0hhl140v8wj].[sum:Calculation_1451847979930402816:qk]&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;[federated.0c2lahi0kxngap1bw0hhl140v8wj].[sum:Corruption:qk]&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;[federated.0c2lahi0kxngap1bw0hhl140v8wj].[usr:Calculation_1451847980043198466:qk]&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;[federated.0c2lahi0kxngap1bw0hhl140v8wj].[max:Life Expectancy:qk]&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;[federated.0c2lahi0kxngap1bw0hhl140v8wj].[sum:Life Expectancy:qk]&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;[federated.0c2lahi0kxngap1bw0hhl140v8wj].[sum:Social Support:qk]:1&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;[federated.0c2lahi0kxngap1bw0hhl140v8wj].[max:GDP per Capita:qk]&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;[federated.0c2lahi0kxngap1bw0hhl140v8wj].[sum:GDP per Capita:qk]&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;[federated.0c2lahi0kxngap1bw0hhl140v8wj].[:Measure Names]&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;[federated.0c2lahi0kxngap1bw0hhl140v8wj].[attr:Country:nk]&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;[federated.0c2lahi0kxngap1bw0hhl140v8wj].[avg:Freedom:qk]&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;[federated.0c2lahi0kxngap1bw0hhl140v8wj].[max:Country:nk]&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;[federated.0c2lahi0kxngap1bw0hhl140v8wj].[max:Freedom:qk]&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;[federated.0c2lahi0kxngap1bw0hhl140v8wj].[min:Country:nk]&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;[federated.0c2lahi0kxngap1bw0hhl140v8wj].[none:Country:nk]&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;[federated.0c2lahi0kxngap1bw0hhl140v8wj].[sum:Freedom:qk]&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;[federated.0c2lahi0kxngap1bw0hhl140v8wj].[max:Generosity:qk]&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;[federated.0c2lahi0kxngap1bw0hhl140v8wj].[sum:Generosity:qk]&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;[federated.0c2lahi0kxngap1bw0hhl140v8wj].[max:Social Support:qk]&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;[federated.0c2lahi0kxngap1bw0hhl140v8wj].[none:Corruption:qk]&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;[federated.0c2lahi0kxngap1bw0hhl140v8wj].[sum:Calculation_1447344379042979851:qk]&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;[federated.0c2lahi0kxngap1bw0hhl140v8wj].[sum:Social Support:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='shape' field='[sum:Happiness Score:ok]' palette='Flags' type='shape'>
            <map to='Flags/Abkhazia.png'>
              <bucket>66.491634845733643</bucket>
            </map>
            <map to='Flags/Afghanistan.png'>
              <bucket>75.227386951446533</bucket>
            </map>
            <map to='Flags/Aland.png'>
              <bucket>79.421821594238281</bucket>
            </map>
            <map to='Flags/Albania.png'>
              <bucket>81.936122417449951</bucket>
            </map>
            <map to='Flags/Algeria.png'>
              <bucket>82.049369812011719</bucket>
            </map>
            <map to='Flags/American-Samoa.png'>
              <bucket>85.017460346221924</bucket>
            </map>
            <map to='Flags/Andorra.png'>
              <bucket>85.381932735443115</bucket>
            </map>
            <map to='Flags/Angola.png'>
              <bucket>91.054498195648193</bucket>
            </map>
            <map to='Flags/Anguilla.png'>
              <bucket>92.929590702056885</bucket>
            </map>
            <map to='Flags/Antarctica.png'>
              <bucket>94.848288059234619</bucket>
            </map>
            <map to='Flags/Antigua-and-Barbuda.png'>
              <bucket>96.471717357635498</bucket>
            </map>
            <map to='Flags/Argentina.png'>
              <bucket>96.7030348777771</bucket>
            </map>
            <map to='Flags/Armenia.png'>
              <bucket>96.741294860839844</bucket>
            </map>
            <map to='Flags/Aruba.png'>
              <bucket>97.764739513397217</bucket>
            </map>
            <map to='Flags/Australia.png'>
              <bucket>97.798839092254639</bucket>
            </map>
            <map to='Flags/Austria.png'>
              <bucket>97.962854862213135</bucket>
            </map>
            <map to='Flags/Azerbaijan.png'>
              <bucket>101.02171945571899</bucket>
            </map>
            <map to='Flags/Bahamas.png'>
              <bucket>101.288489818573</bucket>
            </map>
            <map to='Flags/Bahrain.png'>
              <bucket>101.30939817428589</bucket>
            </map>
            <map to='Flags/Bangladesh.png'>
              <bucket>101.5896315574646</bucket>
            </map>
            <map to='Flags/Barbados.png'>
              <bucket>102.36022281646729</bucket>
            </map>
            <map to='Flags/Basque-Country.png'>
              <bucket>103.40894842147827</bucket>
            </map>
            <map to='Flags/Belarus.png'>
              <bucket>104.08800888061523</bucket>
            </map>
            <map to='Flags/Belgium.png'>
              <bucket>106.52726459503174</bucket>
            </map>
            <map to='Flags/Belize.png'>
              <bucket>106.74830770492554</bucket>
            </map>
          </encoding>
          <encoding attr='shape' field='[min:Country:nk]' palette='Flags' type='shape'>
            <map to='Flags/Abkhazia.png'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='Flags/Afghanistan.png'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='Flags/Aland.png'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='Flags/Albania.png'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='Flags/Algeria.png'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='Flags/American-Samoa.png'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='Flags/Andorra.png'>
              <bucket>&quot;Congo (Kinshasa)&quot;</bucket>
            </map>
            <map to='Flags/Angola.png'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='Flags/Anguilla.png'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='Flags/Antarctica.png'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='Flags/Antigua-and-Barbuda.png'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='Flags/Argentina.png'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='Flags/Armenia.png'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='Flags/Aruba.png'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='Flags/Australia.png'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='Flags/Austria.png'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='Flags/Azerbaijan.png'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='Flags/Bahamas.png'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='Flags/Bahrain.png'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='Flags/Bangladesh.png'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='Flags/Barbados.png'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='Flags/Basque-Country.png'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='Flags/Belarus.png'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='Flags/Belgium.png'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='Flags/Belize.png'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='Flags/Benin.png'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='Flags/Bermuda.png'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='Flags/Bhutan.png'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='Flags/Bolivia.png'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='Flags/Bosnia-and-Herzegovina.png'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='Flags/Botswana.png'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='Flags/Brazil.png'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='Flags/British-Antarctic-Territory.png'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='Flags/British-Virgin-Islands.png'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='Flags/Brunei.png'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='Flags/Bulgaria.png'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='Flags/Burkina-Faso.png'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='Flags/Burundi.png'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='Flags/Cambodia.png'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='Flags/Cameroon.png'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='Flags/Canada.png'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='Flags/Canary-Islands.png'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='Flags/Cape-Verde.png'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='Flags/Cayman-Islands.png'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='Flags/Central-African-Republic.png'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='Flags/Chad.png'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='Flags/Chile.png'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='Flags/China.png'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='Flags/Christmas-Island.png'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='Flags/Cocos-Keeling-Islands.png'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[min:Country:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Congo (Brazzaville)&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ivory Coast&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Turkiye&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;State of Palestine&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Congo (Kinshasa)&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Hong Kong S.A.R. of China&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Somaliland region&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Taiwan Province of China&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='shape' field='[max:Country:nk]' palette='Flags' type='shape'>
            <map to='Flags/Abkhazia.png'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='Flags/Afghanistan.png'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='Flags/Aland.png'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='Flags/Albania.png'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='Flags/Algeria.png'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='Flags/American-Samoa.png'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='Flags/Andorra.png'>
              <bucket>&quot;Congo (Kinshasa)&quot;</bucket>
            </map>
            <map to='Flags/Angola.png'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='Flags/Anguilla.png'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='Flags/Antarctica.png'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='Flags/Antigua-and-Barbuda.png'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='Flags/Argentina.png'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='Flags/Armenia.png'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='Flags/Aruba.png'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='Flags/Australia.png'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='Flags/Austria.png'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='Flags/Azerbaijan.png'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='Flags/Bahamas.png'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='Flags/Bahrain.png'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='Flags/Bangladesh.png'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='Flags/Barbados.png'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='Flags/Basque-Country.png'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='Flags/Belarus.png'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='Flags/Belgium.png'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='Flags/Belize.png'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='Flags/Benin.png'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='Flags/Bermuda.png'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='Flags/Bhutan.png'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='Flags/Bolivia.png'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='Flags/Bosnia-and-Herzegovina.png'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='Flags/Botswana.png'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='Flags/Brazil.png'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='Flags/British-Antarctic-Territory.png'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='Flags/British-Virgin-Islands.png'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='Flags/Brunei.png'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='Flags/Bulgaria.png'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='Flags/Burkina-Faso.png'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='Flags/Burundi.png'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='Flags/Cambodia.png'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='Flags/Cameroon.png'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='Flags/Canada.png'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='Flags/Canary-Islands.png'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='Flags/Cape-Verde.png'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='Flags/Cayman-Islands.png'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='Flags/Central-African-Republic.png'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='Flags/Chad.png'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='Flags/Chile.png'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='Flags/China.png'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='Flags/Christmas-Island.png'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='Flags/Cocos-Keeling-Islands.png'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[max:Country:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Congo (Brazzaville)&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ivory Coast&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Turkiye&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;State of Palestine&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Congo (Kinshasa)&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Hong Kong S.A.R. of China&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Somaliland region&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Taiwan Province of China&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='shape' field='[attr:Country:nk]' palette='Flags' type='shape'>
            <map to='Flags/Abkhazia.png'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='Flags/Afghanistan.png'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='Flags/Aland.png'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='Flags/Albania.png'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='Flags/Algeria.png'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='Flags/American-Samoa.png'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='Flags/Andorra.png'>
              <bucket>&quot;Congo (Kinshasa)&quot;</bucket>
            </map>
            <map to='Flags/Angola.png'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='Flags/Anguilla.png'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='Flags/Antarctica.png'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='Flags/Antigua-and-Barbuda.png'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='Flags/Argentina.png'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='Flags/Armenia.png'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='Flags/Aruba.png'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='Flags/Australia.png'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='Flags/Austria.png'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='Flags/Azerbaijan.png'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='Flags/Bahamas.png'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='Flags/Bahrain.png'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='Flags/Bangladesh.png'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='Flags/Barbados.png'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='Flags/Basque-Country.png'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='Flags/Belarus.png'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='Flags/Belgium.png'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='Flags/Belize.png'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='Flags/Benin.png'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='Flags/Bermuda.png'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='Flags/Bhutan.png'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='Flags/Bolivia.png'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='Flags/Bosnia-and-Herzegovina.png'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='Flags/Botswana.png'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='Flags/Brazil.png'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='Flags/British-Antarctic-Territory.png'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='Flags/British-Virgin-Islands.png'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='Flags/Brunei.png'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='Flags/Bulgaria.png'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='Flags/Burkina-Faso.png'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='Flags/Burundi.png'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='Flags/Cambodia.png'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='Flags/Cameroon.png'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='Flags/Canada.png'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='Flags/Canary-Islands.png'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='Flags/Cape-Verde.png'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='Flags/Cayman-Islands.png'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='Flags/Central-African-Republic.png'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='Flags/Chad.png'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='Flags/Chile.png'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='Flags/China.png'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='Flags/Christmas-Island.png'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='Flags/Cocos-Keeling-Islands.png'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[attr:Country:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Congo (Brazzaville)&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ivory Coast&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Turkiye&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;State of Palestine&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Congo (Kinshasa)&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Hong Kong S.A.R. of China&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Somaliland region&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Taiwan Province of China&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Country:nk]&#10;[:Measure Names]' type='palette'>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Australia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;United States&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Finland&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Panama&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Canada&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Norway&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Austria&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Israel&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Germany&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map-pri>
          </encoding>
          <encoding attr='shape' field='[none:Country:nk]' palette='Flags' type='shape'>
            <map to='Flags/Abkhazia.png'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='Flags/Afghanistan.png'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='Flags/Aland.png'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='Flags/Albania.png'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='Flags/Algeria.png'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='Flags/American-Samoa.png'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='Flags/Andorra.png'>
              <bucket>&quot;Congo (Kinshasa)&quot;</bucket>
            </map>
            <map to='Flags/Angola.png'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='Flags/Anguilla.png'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='Flags/Antarctica.png'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='Flags/Antigua-and-Barbuda.png'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='Flags/Argentina.png'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='Flags/Armenia.png'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='Flags/Aruba.png'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='Flags/Australia.png'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='Flags/Austria.png'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='Flags/Azerbaijan.png'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='Flags/Bahamas.png'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='Flags/Bahrain.png'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='Flags/Bangladesh.png'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='Flags/Barbados.png'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='Flags/Basque-Country.png'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='Flags/Belarus.png'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='Flags/Belgium.png'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='Flags/Belize.png'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='Flags/Benin.png'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='Flags/Bermuda.png'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='Flags/Bhutan.png'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='Flags/Bolivia.png'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='Flags/Bosnia-and-Herzegovina.png'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='Flags/Botswana.png'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='Flags/Brazil.png'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='Flags/British-Antarctic-Territory.png'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='Flags/British-Virgin-Islands.png'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='Flags/Brunei.png'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='Flags/Bulgaria.png'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='Flags/Burkina-Faso.png'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='Flags/Burundi.png'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='Flags/Cambodia.png'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='Flags/Cameroon.png'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='Flags/Canada.png'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='Flags/Canary-Islands.png'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='Flags/Cape-Verde.png'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='Flags/Cayman-Islands.png'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='Flags/Central-African-Republic.png'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='Flags/Chad.png'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='Flags/Chile.png'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='Flags/China.png'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='Flags/Christmas-Island.png'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='Flags/Cocos-Keeling-Islands.png'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' palette='tableau-20' type='palette'>
            <map to='#00ffff'>
              <bucket>&quot;[federated.0c2lahi0kxngap1bw0hhl140v8wj].[max:Generosity:qk]&quot;</bucket>
            </map>
            <map to='#00ffff'>
              <bucket>&quot;[federated.0c2lahi0kxngap1bw0hhl140v8wj].[sum:Generosity:qk]&quot;</bucket>
            </map>
            <map to='#080bc8'>
              <bucket>&quot;[federated.0c2lahi0kxngap1bw0hhl140v8wj].[attr:Happiness Score:qk]&quot;</bucket>
            </map>
            <map to='#080bc8'>
              <bucket>&quot;[federated.0c2lahi0kxngap1bw0hhl140v8wj].[prc25:Happiness Score:qk]&quot;</bucket>
            </map>
            <map to='#080bc8'>
              <bucket>&quot;[federated.0c2lahi0kxngap1bw0hhl140v8wj].[prc50:Happiness Score:qk]&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;[federated.0c2lahi0kxngap1bw0hhl140v8wj].[avg:Calculation_2406048150383206400:qk]&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;[federated.0c2lahi0kxngap1bw0hhl140v8wj].[max:Calculation_1319554740376866817:qk]&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;[federated.0c2lahi0kxngap1bw0hhl140v8wj].[max:Calculation_2406048150383206400:qk]&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;[federated.0c2lahi0kxngap1bw0hhl140v8wj].[med:Calculation_2406048150383206400:qk]&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;[federated.0c2lahi0kxngap1bw0hhl140v8wj].[min:Calculation_2406048150383206400:qk]&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;[federated.0c2lahi0kxngap1bw0hhl140v8wj].[sum:Calculation_2406048150383206400:qk]&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;[federated.0c2lahi0kxngap1bw0hhl140v8wj].[usr:Calculation_1447344379116171284:qk:2]&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;[federated.0c2lahi0kxngap1bw0hhl140v8wj].[usr:Calculation_1447344379116171284:qk:3]&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;[federated.0c2lahi0kxngap1bw0hhl140v8wj].[usr:Calculation_1447344379116171284:qk:4]&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;[federated.0c2lahi0kxngap1bw0hhl140v8wj].[usr:Calculation_1447344379116171284:qk:6]&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;[federated.0c2lahi0kxngap1bw0hhl140v8wj].[usr:Calculation_2406048150383206400:qk]&quot;</bucket>
            </map>
            <map to='#212121'>
              <bucket>&quot;[federated.0c2lahi0kxngap1bw0hhl140v8wj].[max:Corruption:qk]&quot;</bucket>
            </map>
            <map to='#212121'>
              <bucket>&quot;[federated.0c2lahi0kxngap1bw0hhl140v8wj].[none:Happiness Score:qk]&quot;</bucket>
            </map>
            <map to='#212121'>
              <bucket>&quot;[federated.0c2lahi0kxngap1bw0hhl140v8wj].[usr:Calculation_1451847980043198466:qk]&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;[federated.0c2lahi0kxngap1bw0hhl140v8wj].[max:Life Expectancy:qk]&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;[federated.0c2lahi0kxngap1bw0hhl140v8wj].[sum:Calculation_1447344379042979851:qk]&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;[federated.0c2lahi0kxngap1bw0hhl140v8wj].[sum:Life Expectancy:qk]&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;[federated.0c2lahi0kxngap1bw0hhl140v8wj].[usr:Calculation_2406048150452195330:qk]&quot;</bucket>
            </map>
            <map to='#4df50f'>
              <bucket>&quot;[federated.0c2lahi0kxngap1bw0hhl140v8wj].[sum:Freedom:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0c2lahi0kxngap1bw0hhl140v8wj]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0c2lahi0kxngap1bw0hhl140v8wj].[diff:usr:Calculation_1447344378982109185:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0c2lahi0kxngap1bw0hhl140v8wj].[usr:Calculation_1294503465991974913:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0c2lahi0kxngap1bw0hhl140v8wj].[usr:Calculation_1447344378982109185:qk:1]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0c2lahi0kxngap1bw0hhl140v8wj].[win:usr:Calculation_1447344378982109185:qk]&quot;</bucket>
            </map>
            <map to='#4f52ff'>
              <bucket>&quot;[federated.0c2lahi0kxngap1bw0hhl140v8wj].[sum:Social Support:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0c2lahi0kxngap1bw0hhl140v8wj].[avg:Freedom:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0c2lahi0kxngap1bw0hhl140v8wj].[__tableau_internal_object_id__].[cnt:World_Happiness_score.csv_CE3EB3EB196C4C388702564AA7BD036B:qk]&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;[federated.0c2lahi0kxngap1bw0hhl140v8wj].[usr:Calculation_1447344379044208652:qk]&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;[federated.0c2lahi0kxngap1bw0hhl140v8wj].[sum:Calculation_1447344379042979851:qk]:1&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;[federated.0c2lahi0kxngap1bw0hhl140v8wj].[sum:Calculation_1319554740376866817:qk]&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;[federated.0c2lahi0kxngap1bw0hhl140v8wj].[usr:Calculation_1447344379008962563:qk:3]&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;[Parameters].[Parameter 1]&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;[federated.0c2lahi0kxngap1bw0hhl140v8wj].[sum:Calculation_1447344379042979851:qk]:2&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;[federated.0c2lahi0kxngap1bw0hhl140v8wj].[__tableau_internal_object_id__].[cnt:World_Happiness_score.csv_3659220C991C4D39AAD1BD347EDF1893:qk]&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;[federated.0c2lahi0kxngap1bw0hhl140v8wj].[usr:Calculation_1447344379010424837:qk:1]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0c2lahi0kxngap1bw0hhl140v8wj].[avg:Corruption:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0c2lahi0kxngap1bw0hhl140v8wj].[none:Life Expectancy:ok]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0c2lahi0kxngap1bw0hhl140v8wj].[usr:Calculation_1952591961757597696:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0c2lahi0kxngap1bw0hhl140v8wj].[usr:Calculation_1294503465991995395:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0c2lahi0kxngap1bw0hhl140v8wj].[usr:Calculation_1447344378981142528:qk:1]&quot;</bucket>
            </map>
            <map to='#f53d05'>
              <bucket>&quot;[federated.0c2lahi0kxngap1bw0hhl140v8wj].[max:Freedom:qk]&quot;</bucket>
            </map>
            <map to='#fec000'>
              <bucket>&quot;[federated.0c2lahi0kxngap1bw0hhl140v8wj].[sum:Happiness Score:qk]&quot;</bucket>
            </map>
            <map to='#ff0000'>
              <bucket>&quot;[federated.0c2lahi0kxngap1bw0hhl140v8wj].[sum:Corruption:qk]&quot;</bucket>
            </map>
            <map to='#ff55ff'>
              <bucket>&quot;[federated.0c2lahi0kxngap1bw0hhl140v8wj].[max:Social Support:qk]&quot;</bucket>
            </map>
            <map to='#ff55ff'>
              <bucket>&quot;[federated.0c2lahi0kxngap1bw0hhl140v8wj].[none:Corruption:qk]&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;[federated.0c2lahi0kxngap1bw0hhl140v8wj].[max:GDP per Capita:qk]&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;[federated.0c2lahi0kxngap1bw0hhl140v8wj].[sum:Calculation_1560778794350825476:qk]&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;[federated.0c2lahi0kxngap1bw0hhl140v8wj].[sum:GDP per Capita:qk]&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;[federated.0c2lahi0kxngap1bw0hhl140v8wj].[usr:Calculation_1447344379009167364:qk:3]&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;[federated.0c2lahi0kxngap1bw0hhl140v8wj].[sum:Calculation_1447344379085217806:qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.0c2lahi0kxngap1bw0hhl140v8wj].[:Measure Names]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.0c2lahi0kxngap1bw0hhl140v8wj].[attr:Country:nk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.0c2lahi0kxngap1bw0hhl140v8wj].[avg:Happiness Score:qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.0c2lahi0kxngap1bw0hhl140v8wj].[ctd:Country:qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.0c2lahi0kxngap1bw0hhl140v8wj].[max:Country:nk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.0c2lahi0kxngap1bw0hhl140v8wj].[max:Happiness Score:qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.0c2lahi0kxngap1bw0hhl140v8wj].[min:Country:nk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.0c2lahi0kxngap1bw0hhl140v8wj].[min:Happiness Score:qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.0c2lahi0kxngap1bw0hhl140v8wj].[none:Corruption:ok]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.0c2lahi0kxngap1bw0hhl140v8wj].[none:Country:nk]&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;[federated.0c2lahi0kxngap1bw0hhl140v8wj].[sum:Calculation_1560778794350235651:qk]&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;[federated.0c2lahi0kxngap1bw0hhl140v8wj].[usr:Calculation_1447344379008798722:qk:3]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Country:nk]' palette='tableau20_10_0' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#4f4d42'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Congo (Brazzaville)&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#8300c4'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ivory Coast&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Turkiye&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#903308'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#9e3a26'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#9e3a26'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#aa7f53'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#ab3f23'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#ab3f23'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;State of Palestine&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#b94523'>
              <bucket>&quot;Somaliland region&quot;</bucket>
            </map>
            <map to='#b94523'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Congo (Kinshasa)&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#c74a22'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#c74a22'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#c87a79'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#c9d134'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#d1c410'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#d35122'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#d35122'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#d3b50e'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Hong Kong S.A.R. of China&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#dc5b20'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#dc5b20'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#e2e22a'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#e5661d'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#e6df15'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#eedf0e'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#ef701b'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#ef701b'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#f17f25'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#f17f25'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Taiwan Province of China&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#f38d31'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#f38d31'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#f4d166'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#f4d166'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#f59a3d'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#f59a3d'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#f5e31b'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#f6c35e'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#f6c35e'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#f7a749'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#f8b555'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#f8b555'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#f9fd0e'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Canada&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='Country' />
        <field-sort-custom-order field='Year' />
        <field-sort-custom-order field='Happiness Score' />
        <field-sort-custom-order field='GDP per Capita' />
        <field-sort-custom-order field='Social Support' />
        <field-sort-custom-order field='Life Expectancy' />
        <field-sort-custom-order field='Freedom' />
        <field-sort-custom-order field='Calculation_1560778794343280642' />
        <field-sort-custom-order field='Generosity' />
        <field-sort-custom-order field='Corruption' />
        <field-sort-custom-order field='Calculation_1560778794342793217' />
        <field-sort-custom-order field='Calculation_1294503465992212484' />
        <field-sort-custom-order field='Calculation_1294503465994952709' />
        <field-sort-custom-order field='Geometry (generated)' />
        <field-sort-custom-order field='Latitude (generated)' />
        <field-sort-custom-order field='Longitude (generated)' />
        <field-sort-custom-order field='Calculation_1560778794319712256' />
        <field-sort-custom-order field=':Measure Names' />
        <field-sort-custom-order field='Multiple Values' />
      </field-sort-info>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Target' datatype='real' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='1.0'>
          <calculation class='tableau' formula='1.0' />
        </column>
        <column caption='Quarter_year Parameter' datatype='date' default-format='*yyyy' name='[Quarter_year Parameter]' param-domain-type='list' role='measure' type='quantitative' value='#2021-01-01#'>
          <calculation class='tableau' formula='#2021-01-01#' />
        </column>
      </datasource-dependencies>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='World_Happiness_score.csv' id='World_Happiness_score.csv_3659220C991C4D39AAD1BD347EDF1893'>
            <properties context=''>
              <relation connection='textscan.0w8tvkh0f4o4m619fuhz605c4sxo' name='World_Happiness_score.csv' table='[World_Happiness_score#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
                  <column datatype='string' name='Country' ordinal='0' />
                  <column datatype='date' date-parse-format='yyyy' name='Year' ordinal='1' />
                  <column datatype='real' name='Happiness Score' ordinal='2' />
                  <column datatype='real' name='GDP per Capita' ordinal='3' />
                  <column datatype='real' name='Social Support' ordinal='4' />
                  <column datatype='real' name='Life Expectancy' ordinal='5' />
                  <column datatype='real' name='Freedom' ordinal='6' />
                  <column datatype='real' name='Generosity' ordinal='7' />
                  <column datatype='real' name='Corruption' ordinal='8' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
    <mapsource inline='true' name='WorldMap' source-platform='win' version='18.1'>
      <connection api-key='pk.eyJ1IjoibmFyZW5kcmFuYXNva2FuIiwiYSI6ImNscnlrOTAxYjFqdXMyam56ZzkxcXgyOGEifQ.zxzDk7XZMOpy-2ELS2_2Cg' class='CustomMapbox' description='' full-url='https://api.mapbox.com/styles/v1/narendranasokan/clrykxlr4018t01p275n97zxj.html?title=true&amp;access_token=pk.eyJ1IjoibmFyZW5kcmFuYXNva2FuIiwiYSI6ImNscnlrOTAxYjFqdXMyam56ZzkxcXgyOGEifQ.zxzDk7XZMOpy-2ELS2_2Cg#2.3/13.783394/20.434513/0' inline='true' offline='' port='443' server='https://api.mapbox.com' url='styles/v1' url-format='/styles/v1/narendranasokan/{L}/tiles/{Z}/{X}/{Y}{D}?access_token=pk.eyJ1IjoibmFyZW5kcmFuYXNva2FuIiwiYSI6ImNscnlrOTAxYjFqdXMyam56ZzkxcXgyOGEifQ.zxzDk7XZMOpy-2ELS2_2Cg' username='narendranasokan' wait-tile-color='#dddddd' />
      <languages />
      <layers>
        <layer display-name='Streets' name='clrykxlr4018t01p275n97zxj' show-ui='true' type='features' />
      </layers>
      <properties />
      <map-styles>
        <map-style display-name='WorldMap' name='mapbox://styles/narendranasokan/clrykxlr4018t01p275n97zxj' wait-tile-color='#dddddd'>
          <map-layer-style name='Streets' request-string='clrykxlr4018t01p275n97zxj' />
        </map-style>
      </map-styles>
      <mapsource-defaults version='18.1'>
        <style>
          <style-rule element='map'>
            <format attr='map-style' value='mapbox://styles/narendranasokan/clrykxlr4018t01p275n97zxj' />
            <format attr='washout' value='0' />
          </style-rule>
        </style>
      </mapsource-defaults>
      <map-attribution copyright-string='© %1 Mapbox' copyright-url='https://mapbox.com/about/maps' short-copyright-string='© Mapbox' />
      <map-attribution2 copyright-string='© OpenStreetMap' copyright-url='https://mapbox.com/about/maps' short-copyright-string='© OSM' />
    </mapsource>
  </mapsources>
  <worksheets>
    <worksheet name='15 Happy Countries'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontname='Tableau Bold' fontsize='12'>&lt;Sheet Name&gt; - &lt;Page Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='World_Happiness_score' name='federated.0c2lahi0kxngap1bw0hhl140v8wj' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0c2lahi0kxngap1bw0hhl140v8wj'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Happiness Score]' role='measure' type='quantitative' />
            <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance aggregation-param='25' column='[Happiness Score]' derivation='Percentile' name='[prc25:Happiness Score:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year]' derivation='Year-Trunc' name='[tyr:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0c2lahi0kxngap1bw0hhl140v8wj].[none:Country:nk]'>
            <groupfilter count='15' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='MAX([Happiness Score])' function='order' user:ui-marker='order'>
                <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                  <groupfilter function='level-members' level='[none:Country:nk]' />
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[none:Country:nk]' member='&quot;Afghanistan&quot;' />
                    <groupfilter function='member' level='[none:Country:nk]' member='&quot;Botswana&quot;' />
                    <groupfilter function='member' level='[none:Country:nk]' member='&quot;Burkina Faso&quot;' />
                    <groupfilter function='member' level='[none:Country:nk]' member='&quot;Burundi&quot;' />
                    <groupfilter function='member' level='[none:Country:nk]' member='&quot;Central African Republic&quot;' />
                    <groupfilter function='member' level='[none:Country:nk]' member='&quot;Chad&quot;' />
                    <groupfilter function='member' level='[none:Country:nk]' member='&quot;Comoros&quot;' />
                    <groupfilter function='member' level='[none:Country:nk]' member='&quot;Congo (Kinshasa)&quot;' />
                    <groupfilter function='member' level='[none:Country:nk]' member='&quot;Djibouti&quot;' />
                    <groupfilter function='member' level='[none:Country:nk]' member='&quot;Egypt&quot;' />
                    <groupfilter function='member' level='[none:Country:nk]' member='&quot;Eswatini&quot;' />
                    <groupfilter function='member' level='[none:Country:nk]' member='&quot;Ethiopia&quot;' />
                    <groupfilter function='member' level='[none:Country:nk]' member='&quot;Haiti&quot;' />
                    <groupfilter function='member' level='[none:Country:nk]' member='&quot;India&quot;' />
                    <groupfilter function='member' level='[none:Country:nk]' member='&quot;Kenya&quot;' />
                    <groupfilter function='member' level='[none:Country:nk]' member='&quot;Lesotho&quot;' />
                    <groupfilter function='member' level='[none:Country:nk]' member='&quot;Madagascar&quot;' />
                    <groupfilter function='member' level='[none:Country:nk]' member='&quot;Malawi&quot;' />
                    <groupfilter function='member' level='[none:Country:nk]' member='&quot;Mali&quot;' />
                    <groupfilter function='member' level='[none:Country:nk]' member='&quot;Mauritania&quot;' />
                    <groupfilter function='member' level='[none:Country:nk]' member='&quot;Myanmar&quot;' />
                    <groupfilter function='member' level='[none:Country:nk]' member='&quot;Namibia&quot;' />
                    <groupfilter function='member' level='[none:Country:nk]' member='&quot;Rwanda&quot;' />
                    <groupfilter function='member' level='[none:Country:nk]' member='&quot;Sierra Leone&quot;' />
                    <groupfilter function='member' level='[none:Country:nk]' member='&quot;South Sudan&quot;' />
                    <groupfilter function='member' level='[none:Country:nk]' member='&quot;Sri Lanka&quot;' />
                    <groupfilter function='member' level='[none:Country:nk]' member='&quot;State of Palestine&quot;' />
                    <groupfilter function='member' level='[none:Country:nk]' member='&quot;Sudan&quot;' />
                    <groupfilter function='member' level='[none:Country:nk]' member='&quot;Syria&quot;' />
                    <groupfilter function='member' level='[none:Country:nk]' member='&quot;Tanzania&quot;' />
                    <groupfilter function='member' level='[none:Country:nk]' member='&quot;Togo&quot;' />
                    <groupfilter function='member' level='[none:Country:nk]' member='&quot;Uganda&quot;' />
                    <groupfilter function='member' level='[none:Country:nk]' member='&quot;Yemen&quot;' />
                    <groupfilter function='member' level='[none:Country:nk]' member='&quot;Zimbabwe&quot;' />
                    <groupfilter function='member' level='[none:Country:nk]' member='%null%' />
                  </groupfilter>
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0c2lahi0kxngap1bw0hhl140v8wj].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='background-color' value='#00000000' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.0c2lahi0kxngap1bw0hhl140v8wj].[none:Country:nk]' />
              <size column='[federated.0c2lahi0kxngap1bw0hhl140v8wj].[prc25:Happiness Score:qk]' />
              <text column='[federated.0c2lahi0kxngap1bw0hhl140v8wj].[none:Country:nk]' />
              <text column='[federated.0c2lahi0kxngap1bw0hhl140v8wj].[prc25:Happiness Score:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
        <pages>
          <column>[federated.0c2lahi0kxngap1bw0hhl140v8wj].[tyr:Year:ok]</column>
        </pages>
      </table>
      <simple-id uuid='{C911FE6F-FDA4-41AD-B90C-072D228FFCB6}' />
    </worksheet>
    <worksheet name='15 UnHappy Countries'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontname='Tableau Bold' fontsize='12'>&lt;Sheet Name&gt; - &lt;Page Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='World_Happiness_score' name='federated.0c2lahi0kxngap1bw0hhl140v8wj' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0c2lahi0kxngap1bw0hhl140v8wj'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Happiness Score]' role='measure' type='quantitative' />
            <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance aggregation-param='25' column='[Happiness Score]' derivation='Percentile' name='[prc25:Happiness Score:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year]' derivation='Year-Trunc' name='[tyr:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0c2lahi0kxngap1bw0hhl140v8wj].[none:Country:nk]'>
            <groupfilter count='15' end='bottom' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='MAX([Happiness Score])' function='order' user:ui-marker='order'>
                <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                  <groupfilter function='level-members' level='[none:Country:nk]' />
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[none:Country:nk]' member='&quot;Afghanistan&quot;' />
                    <groupfilter function='member' level='[none:Country:nk]' member='&quot;Botswana&quot;' />
                    <groupfilter function='member' level='[none:Country:nk]' member='&quot;Burkina Faso&quot;' />
                    <groupfilter function='member' level='[none:Country:nk]' member='&quot;Burundi&quot;' />
                    <groupfilter function='member' level='[none:Country:nk]' member='&quot;Central African Republic&quot;' />
                    <groupfilter function='member' level='[none:Country:nk]' member='&quot;Chad&quot;' />
                    <groupfilter function='member' level='[none:Country:nk]' member='&quot;Comoros&quot;' />
                    <groupfilter function='member' level='[none:Country:nk]' member='&quot;Congo (Kinshasa)&quot;' />
                    <groupfilter function='member' level='[none:Country:nk]' member='&quot;Djibouti&quot;' />
                    <groupfilter function='member' level='[none:Country:nk]' member='&quot;Egypt&quot;' />
                    <groupfilter function='member' level='[none:Country:nk]' member='&quot;Eswatini&quot;' />
                    <groupfilter function='member' level='[none:Country:nk]' member='&quot;Ethiopia&quot;' />
                    <groupfilter function='member' level='[none:Country:nk]' member='&quot;Haiti&quot;' />
                    <groupfilter function='member' level='[none:Country:nk]' member='&quot;India&quot;' />
                    <groupfilter function='member' level='[none:Country:nk]' member='&quot;Kenya&quot;' />
                    <groupfilter function='member' level='[none:Country:nk]' member='&quot;Lesotho&quot;' />
                    <groupfilter function='member' level='[none:Country:nk]' member='&quot;Madagascar&quot;' />
                    <groupfilter function='member' level='[none:Country:nk]' member='&quot;Malawi&quot;' />
                    <groupfilter function='member' level='[none:Country:nk]' member='&quot;Mali&quot;' />
                    <groupfilter function='member' level='[none:Country:nk]' member='&quot;Mauritania&quot;' />
                    <groupfilter function='member' level='[none:Country:nk]' member='&quot;Myanmar&quot;' />
                    <groupfilter function='member' level='[none:Country:nk]' member='&quot;Namibia&quot;' />
                    <groupfilter function='member' level='[none:Country:nk]' member='&quot;Rwanda&quot;' />
                    <groupfilter function='member' level='[none:Country:nk]' member='&quot;Sierra Leone&quot;' />
                    <groupfilter function='member' level='[none:Country:nk]' member='&quot;South Sudan&quot;' />
                    <groupfilter function='member' level='[none:Country:nk]' member='&quot;Sri Lanka&quot;' />
                    <groupfilter function='member' level='[none:Country:nk]' member='&quot;State of Palestine&quot;' />
                    <groupfilter function='member' level='[none:Country:nk]' member='&quot;Sudan&quot;' />
                    <groupfilter function='member' level='[none:Country:nk]' member='&quot;Syria&quot;' />
                    <groupfilter function='member' level='[none:Country:nk]' member='&quot;Tanzania&quot;' />
                    <groupfilter function='member' level='[none:Country:nk]' member='&quot;Togo&quot;' />
                    <groupfilter function='member' level='[none:Country:nk]' member='&quot;Uganda&quot;' />
                    <groupfilter function='member' level='[none:Country:nk]' member='&quot;Yemen&quot;' />
                    <groupfilter function='member' level='[none:Country:nk]' member='&quot;Zimbabwe&quot;' />
                    <groupfilter function='member' level='[none:Country:nk]' member='%null%' />
                  </groupfilter>
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0c2lahi0kxngap1bw0hhl140v8wj].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='background-color' value='#00000000' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.0c2lahi0kxngap1bw0hhl140v8wj].[none:Country:nk]' />
              <size column='[federated.0c2lahi0kxngap1bw0hhl140v8wj].[prc25:Happiness Score:qk]' />
              <text column='[federated.0c2lahi0kxngap1bw0hhl140v8wj].[none:Country:nk]' />
              <text column='[federated.0c2lahi0kxngap1bw0hhl140v8wj].[prc25:Happiness Score:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
        <pages>
          <column>[federated.0c2lahi0kxngap1bw0hhl140v8wj].[tyr:Year:ok]</column>
        </pages>
      </table>
      <simple-id uuid='{6211938A-6875-42E6-9EA4-BCA1380C60BF}' />
    </worksheet>
    <worksheet name='Dependent Features'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontname='Tableau Bold' fontsize='12'>Dependent Factors Partitions</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='World_Happiness_score' name='federated.0c2lahi0kxngap1bw0hhl140v8wj' />
          </datasources>
          <datasource-dependencies datasource='federated.0c2lahi0kxngap1bw0hhl140v8wj'>
            <column caption='Factor Analysis' datatype='integer' name='[Calculation_1319554740376866817]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Happiness Score] &gt;= 6.4 AND&#13;&#10;   [GDP per Capita] &gt;= 10.5 AND&#13;&#10;   [Social Support] &gt; 0.9 AND&#13;&#10;   [Life Expectancy] &gt; 69.9 AND&#13;&#10;   [Freedom] &gt; 0.88 AND&#13;&#10;   [Generosity] &gt; 0.12 AND&#13;&#10;   [Corruption] &lt; 0.66 THEN&#13;&#10;   1&#13;&#10;ELSEIF [Corruption] &gt; 0.87 THEN&#13;&#10;   1&#13;&#10;ELSE&#13;&#10;   0&#13;&#10;END' />
            </column>
            <column datatype='real' name='[Corruption]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Freedom]' role='measure' type='quantitative' />
            <column datatype='real' name='[GDP per Capita]' role='measure' type='quantitative' />
            <column datatype='real' name='[Generosity]' role='measure' type='quantitative' />
            <column datatype='real' name='[Happiness Score]' role='measure' type='quantitative' />
            <column datatype='real' name='[Life Expectancy]' role='measure' type='quantitative' />
            <column datatype='real' name='[Social Support]' role='measure' type='quantitative' />
            <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Corruption]' derivation='Max' name='[max:Corruption:qk]' pivot='key' type='quantitative' />
            <column-instance column='[GDP per Capita]' derivation='Max' name='[max:GDP per Capita:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Generosity]' derivation='Max' name='[max:Generosity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Happiness Score]' derivation='Max' name='[max:Happiness Score:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Social Support]' derivation='Max' name='[max:Social Support:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Corruption]' derivation='Sum' name='[sum:Corruption:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Freedom]' derivation='Sum' name='[sum:Freedom:qk]' pivot='key' type='quantitative' />
            <column-instance column='[GDP per Capita]' derivation='Sum' name='[sum:GDP per Capita:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Generosity]' derivation='Sum' name='[sum:Generosity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Happiness Score]' derivation='Sum' name='[sum:Happiness Score:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Social Support]' derivation='Sum' name='[sum:Social Support:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year]' derivation='Year-Trunc' name='[tyr:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0c2lahi0kxngap1bw0hhl140v8wj].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0c2lahi0kxngap1bw0hhl140v8wj].[sum:GDP per Capita:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0c2lahi0kxngap1bw0hhl140v8wj].[sum:Social Support:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0c2lahi0kxngap1bw0hhl140v8wj].[sum:Freedom:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0c2lahi0kxngap1bw0hhl140v8wj].[sum:Generosity:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0c2lahi0kxngap1bw0hhl140v8wj].[sum:Corruption:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0c2lahi0kxngap1bw0hhl140v8wj].[sum:Happiness Score:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0c2lahi0kxngap1bw0hhl140v8wj].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0c2lahi0kxngap1bw0hhl140v8wj].[sum:GDP per Capita:qk]&quot;</bucket>
              <bucket>&quot;[federated.0c2lahi0kxngap1bw0hhl140v8wj].[sum:Social Support:qk]&quot;</bucket>
              <bucket>&quot;[federated.0c2lahi0kxngap1bw0hhl140v8wj].[sum:Freedom:qk]&quot;</bucket>
              <bucket>&quot;[federated.0c2lahi0kxngap1bw0hhl140v8wj].[sum:Generosity:qk]&quot;</bucket>
              <bucket>&quot;[federated.0c2lahi0kxngap1bw0hhl140v8wj].[sum:Corruption:qk]&quot;</bucket>
              <bucket>&quot;[federated.0c2lahi0kxngap1bw0hhl140v8wj].[sum:Happiness Score:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='quantitative' column='[federated.0c2lahi0kxngap1bw0hhl140v8wj].[max:Corruption:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.0c2lahi0kxngap1bw0hhl140v8wj].[max:GDP per Capita:qk]' included-values='in-range'>
            <min>10.5</min>
            <max>11.624914169311523</max>
          </filter>
          <filter class='quantitative' column='[federated.0c2lahi0kxngap1bw0hhl140v8wj].[max:Generosity:qk]' included-values='in-range'>
            <min>0.12</min>
            <max>0.3987900018692016</max>
          </filter>
          <filter class='quantitative' column='[federated.0c2lahi0kxngap1bw0hhl140v8wj].[max:Happiness Score:qk]' included-values='in-range'>
            <min>6.4000000000000004</min>
            <max>7.7882318496704102</max>
          </filter>
          <filter class='quantitative' column='[federated.0c2lahi0kxngap1bw0hhl140v8wj].[max:Social Support:qk]' included-values='non-null' />
          <filter class='categorical' column='[federated.0c2lahi0kxngap1bw0hhl140v8wj].[none:Country:nk]'>
            <groupfilter expression='AVG([Calculation_1319554740376866817])&gt;0' function='filter' user:ui-marker='filter-by'>
              <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                <groupfilter function='level-members' level='[none:Country:nk]' />
                <groupfilter function='union'>
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Maldives&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Oman&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Qatar&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Somaliland region&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;South Sudan&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='&quot;Turkmenistan&quot;' />
                  <groupfilter function='member' level='[none:Country:nk]' member='%null%' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0c2lahi0kxngap1bw0hhl140v8wj].[:Measure Names]</column>
            <column>[federated.0c2lahi0kxngap1bw0hhl140v8wj].[max:GDP per Capita:qk]</column>
            <column>[federated.0c2lahi0kxngap1bw0hhl140v8wj].[max:Generosity:qk]</column>
            <column>[federated.0c2lahi0kxngap1bw0hhl140v8wj].[max:Happiness Score:qk]</column>
            <column>[federated.0c2lahi0kxngap1bw0hhl140v8wj].[none:Country:nk]</column>
            <column>[federated.0c2lahi0kxngap1bw0hhl140v8wj].[max:Corruption:qk]</column>
            <column>[federated.0c2lahi0kxngap1bw0hhl140v8wj].[max:Social Support:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' domain-expand='false' field='[federated.0c2lahi0kxngap1bw0hhl140v8wj].[Multiple Values]' field-type='quantitative' scope='cols' type='space' />
            <format attr='auto-subtitle' class='0' field='[federated.0c2lahi0kxngap1bw0hhl140v8wj].[Multiple Values]' scope='cols' value='true' />
            <format attr='title' class='0' field='[federated.0c2lahi0kxngap1bw0hhl140v8wj].[Multiple Values]' scope='cols' value='Happiness Score Factors' />
            <format attr='display' class='0' field='[federated.0c2lahi0kxngap1bw0hhl140v8wj].[Multiple Values]' scope='cols' value='false' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='border-color' value='#000000' />
            <format attr='border-width' value='0' />
            <format attr='border-style' value='none' />
            <format attr='border-width' scope='rows' value='0' />
            <format attr='border-style' scope='rows' value='none' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-size' value='10' />
            <format attr='font-weight' value='bold' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-align' field='[federated.0c2lahi0kxngap1bw0hhl140v8wj].[none:Country:nk]' value='left' />
            <format attr='font-size' field='[federated.0c2lahi0kxngap1bw0hhl140v8wj].[Multiple Values]' value='10' />
            <format attr='font-weight' field='[federated.0c2lahi0kxngap1bw0hhl140v8wj].[Multiple Values]' value='bold' />
            <format attr='vertical-align' field='[federated.0c2lahi0kxngap1bw0hhl140v8wj].[none:Country:nk]' value='center' />
            <format attr='font-size' field='[federated.0c2lahi0kxngap1bw0hhl140v8wj].[none:Country:nk]' value='10' />
            <format attr='font-weight' field='[federated.0c2lahi0kxngap1bw0hhl140v8wj].[none:Country:nk]' value='bold' />
            <format attr='font-family' field='[federated.0c2lahi0kxngap1bw0hhl140v8wj].[none:Country:nk]' value='Tableau Bold' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-width' value='0' />
            <format attr='border-style' value='none' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#00000000' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-color' scope='rows' value='#0000004b' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-pattern-only' scope='rows' value='solid' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='legend-title'>
            <format attr='text-align' value='center' />
            <format attr='font-weight' value='normal' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.0c2lahi0kxngap1bw0hhl140v8wj].[:Measure Names]' value='Factors' />
          </style-rule>
          <style-rule element='page-card-title'>
            <format attr='title' value='Year' />
          </style-rule>
        </style>
        <panes>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0c2lahi0kxngap1bw0hhl140v8wj].[:Measure Names]' />
              <text column='[federated.0c2lahi0kxngap1bw0hhl140v8wj].[Multiple Values]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run>Country:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0c2lahi0kxngap1bw0hhl140v8wj].[none:Country:nk]>]]></run>
                <run>Æ&#10;</run>
                <run>Year of Year:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0c2lahi0kxngap1bw0hhl140v8wj].[tyr:Year:ok]>]]></run>
                <run>Æ&#10;</run>
                <run><![CDATA[<[federated.0c2lahi0kxngap1bw0hhl140v8wj].[:Measure Names]>:	]]></run>
                <run bold='true'><![CDATA[<[federated.0c2lahi0kxngap1bw0hhl140v8wj].[Multiple Values]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0c2lahi0kxngap1bw0hhl140v8wj].[none:Country:nk]</rows>
        <cols>[federated.0c2lahi0kxngap1bw0hhl140v8wj].[Multiple Values]</cols>
        <pages>
          <column>[federated.0c2lahi0kxngap1bw0hhl140v8wj].[tyr:Year:ok]</column>
        </pages>
        <page-trail-options enabled='true' />
      </table>
      <simple-id uuid='{B98CA005-4EBB-46E3-AB9C-0FE0C4805C3D}' />
    </worksheet>
    <worksheet name='Down Country Trend Analysis '>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontname='Tableau Bold' fontsize='12'>Downward Trend</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='World_Happiness_score' name='federated.0c2lahi0kxngap1bw0hhl140v8wj' />
          </datasources>
          <datasource-dependencies datasource='federated.0c2lahi0kxngap1bw0hhl140v8wj'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Happiness Score]' role='measure' type='quantitative' />
            <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Happiness Score]' derivation='None' name='[none:Happiness Score:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Happiness Score]' derivation='Sum' name='[sum:Happiness Score:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year]' derivation='Year-Trunc' name='[tyr:Year:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0c2lahi0kxngap1bw0hhl140v8wj].[none:Country:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Afghanistan&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Angola&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Jordan&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Lebanon&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Malaysia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Mexico&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Serbia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;South Sudan&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Syria&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Ukraine&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Venezuela&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Zimbabwe&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.0c2lahi0kxngap1bw0hhl140v8wj].[none:Happiness Score:qk]' included-values='in-range'>
            <min>1.2812711000442505</min>
            <max>7.8893499374389648</max>
          </filter>
          <slices>
            <column>[federated.0c2lahi0kxngap1bw0hhl140v8wj].[none:Happiness Score:qk]</column>
            <column>[federated.0c2lahi0kxngap1bw0hhl140v8wj].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0c2lahi0kxngap1bw0hhl140v8wj].[tyr:Year:qk]' scope='cols' value='Year' />
            <format attr='display' class='0' field='[federated.0c2lahi0kxngap1bw0hhl140v8wj].[sum:Happiness Score:qk]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-size' value='10' />
            <format attr='font-weight' value='bold' />
            <format attr='font-family' value='Tableau Bold' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-family' field='[federated.0c2lahi0kxngap1bw0hhl140v8wj].[none:Country:nk]' value='Tableau Bold' />
            <format attr='font-size' field='[federated.0c2lahi0kxngap1bw0hhl140v8wj].[none:Country:nk]' value='10' />
            <format attr='font-weight' field='[federated.0c2lahi0kxngap1bw0hhl140v8wj].[none:Country:nk]' value='bold' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#00000000' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.0c2lahi0kxngap1bw0hhl140v8wj].[none:Country:nk]' value='Down Countries' />
          </style-rule>
          <style-rule element='data-highlighter-title'>
            <format attr='title' field='[federated.0c2lahi0kxngap1bw0hhl140v8wj].[none:Country:nk]' value='Highlight Country' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0c2lahi0kxngap1bw0hhl140v8wj].[none:Country:nk]' />
              <text column='[federated.0c2lahi0kxngap1bw0hhl140v8wj].[none:Country:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0c2lahi0kxngap1bw0hhl140v8wj].[sum:Happiness Score:qk]</rows>
        <cols>[federated.0c2lahi0kxngap1bw0hhl140v8wj].[tyr:Year:qk]</cols>
      </table>
      <simple-id uuid='{5E91DBC9-7D7D-4EDB-BC33-306D34F180D8}' />
    </worksheet>
    <worksheet name='Happiness Score Correlations'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontname='Tableau Bold'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='World_Happiness_score' name='federated.0c2lahi0kxngap1bw0hhl140v8wj' />
          </datasources>
          <datasource-dependencies datasource='federated.0c2lahi0kxngap1bw0hhl140v8wj'>
            <column datatype='real' name='[Corruption]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Freedom]' role='measure' type='quantitative' />
            <column datatype='real' name='[GDP per Capita]' role='measure' type='quantitative' />
            <column datatype='real' name='[Generosity]' role='measure' type='quantitative' />
            <column datatype='real' name='[Happiness Score]' role='measure' type='quantitative' />
            <column datatype='real' name='[Life Expectancy]' role='measure' type='quantitative' />
            <column datatype='real' name='[Social Support]' role='measure' type='quantitative' />
            <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Corruption]' derivation='Sum' name='[sum:Corruption:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Freedom]' derivation='Sum' name='[sum:Freedom:qk]' pivot='key' type='quantitative' />
            <column-instance column='[GDP per Capita]' derivation='Sum' name='[sum:GDP per Capita:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Generosity]' derivation='Sum' name='[sum:Generosity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Happiness Score]' derivation='Sum' name='[sum:Happiness Score:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Life Expectancy]' derivation='Sum' name='[sum:Life Expectancy:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Social Support]' derivation='Sum' name='[sum:Social Support:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year]' derivation='Year-Trunc' name='[tyr:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0c2lahi0kxngap1bw0hhl140v8wj].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0c2lahi0kxngap1bw0hhl140v8wj].[sum:Corruption:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0c2lahi0kxngap1bw0hhl140v8wj].[sum:Freedom:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0c2lahi0kxngap1bw0hhl140v8wj].[sum:GDP per Capita:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0c2lahi0kxngap1bw0hhl140v8wj].[sum:Generosity:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0c2lahi0kxngap1bw0hhl140v8wj].[sum:Happiness Score:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0c2lahi0kxngap1bw0hhl140v8wj].[sum:Life Expectancy:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0c2lahi0kxngap1bw0hhl140v8wj].[sum:Social Support:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0c2lahi0kxngap1bw0hhl140v8wj].[none:Country:nk]'>
            <groupfilter function='level-members' level='[none:Country:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.0c2lahi0kxngap1bw0hhl140v8wj].[sum:Corruption:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.0c2lahi0kxngap1bw0hhl140v8wj].[sum:Freedom:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.0c2lahi0kxngap1bw0hhl140v8wj].[sum:GDP per Capita:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.0c2lahi0kxngap1bw0hhl140v8wj].[sum:Generosity:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.0c2lahi0kxngap1bw0hhl140v8wj].[sum:Life Expectancy:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.0c2lahi0kxngap1bw0hhl140v8wj].[sum:Social Support:qk]' included-values='non-null' />
          <slices>
            <column>[federated.0c2lahi0kxngap1bw0hhl140v8wj].[sum:Life Expectancy:qk]</column>
            <column>[federated.0c2lahi0kxngap1bw0hhl140v8wj].[sum:GDP per Capita:qk]</column>
            <column>[federated.0c2lahi0kxngap1bw0hhl140v8wj].[sum:Corruption:qk]</column>
            <column>[federated.0c2lahi0kxngap1bw0hhl140v8wj].[:Measure Names]</column>
            <column>[federated.0c2lahi0kxngap1bw0hhl140v8wj].[sum:Generosity:qk]</column>
            <column>[federated.0c2lahi0kxngap1bw0hhl140v8wj].[sum:Freedom:qk]</column>
            <column>[federated.0c2lahi0kxngap1bw0hhl140v8wj].[sum:Social Support:qk]</column>
            <column>[federated.0c2lahi0kxngap1bw0hhl140v8wj].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' domain-expand='false' field='[federated.0c2lahi0kxngap1bw0hhl140v8wj].[sum:Life Expectancy:qk]' field-type='quantitative' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0c2lahi0kxngap1bw0hhl140v8wj].[sum:Happiness Score:qk]' field-type='quantitative' max='10.0' min='0.0' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' field='[federated.0c2lahi0kxngap1bw0hhl140v8wj].[sum:Life Expectancy:qk]' value='#ffffff' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' field='[federated.0c2lahi0kxngap1bw0hhl140v8wj].[sum:Happiness Score:qk]' value='10' />
            <format attr='font-weight' field='[federated.0c2lahi0kxngap1bw0hhl140v8wj].[sum:Happiness Score:qk]' value='bold' />
            <format attr='font-size' field='[federated.0c2lahi0kxngap1bw0hhl140v8wj].[sum:Life Expectancy:qk]' value='10' />
            <format attr='font-weight' field='[federated.0c2lahi0kxngap1bw0hhl140v8wj].[sum:Life Expectancy:qk]' value='bold' />
            <format attr='font-size' field='[federated.0c2lahi0kxngap1bw0hhl140v8wj].[sum:GDP per Capita:qk]' value='10' />
            <format attr='font-weight' field='[federated.0c2lahi0kxngap1bw0hhl140v8wj].[sum:GDP per Capita:qk]' value='bold' />
            <format attr='font-size' field='[federated.0c2lahi0kxngap1bw0hhl140v8wj].[sum:Freedom:qk]' value='10' />
            <format attr='font-weight' field='[federated.0c2lahi0kxngap1bw0hhl140v8wj].[sum:Freedom:qk]' value='bold' />
            <format attr='font-weight' field='[federated.0c2lahi0kxngap1bw0hhl140v8wj].[sum:Corruption:qk]' value='bold' />
            <format attr='font-size' field='[federated.0c2lahi0kxngap1bw0hhl140v8wj].[sum:Corruption:qk]' value='10' />
            <format attr='font-size' field='[federated.0c2lahi0kxngap1bw0hhl140v8wj].[sum:Social Support:qk]' value='10' />
            <format attr='font-weight' field='[federated.0c2lahi0kxngap1bw0hhl140v8wj].[sum:Social Support:qk]' value='bold' />
            <format attr='font-size' field='[federated.0c2lahi0kxngap1bw0hhl140v8wj].[sum:Generosity:qk]' value='10' />
            <format attr='font-weight' field='[federated.0c2lahi0kxngap1bw0hhl140v8wj].[sum:Generosity:qk]' value='bold' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0c2lahi0kxngap1bw0hhl140v8wj].[sum:Happiness Score:qk]' num-steps='5' palette='orange_gold_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='rows' value='0' />
            <format attr='background-color' value='#ffffff' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.0c2lahi0kxngap1bw0hhl140v8wj].[sum:Happiness Score:qk]' value='Happiness Score' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.0c2lahi0kxngap1bw0hhl140v8wj].[:Measure Names]' value='Features' />
          </style-rule>
          <style-rule element='quick-filter-title'>
            <format attr='font-size' value='10' />
            <format attr='font-weight' value='normal' />
          </style-rule>
          <style-rule element='page-card-title'>
            <format attr='title' value='YEAR' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0c2lahi0kxngap1bw0hhl140v8wj].[sum:Happiness Score:qk]' />
              <lod column='[federated.0c2lahi0kxngap1bw0hhl140v8wj].[none:Country:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0c2lahi0kxngap1bw0hhl140v8wj].[sum:Life Expectancy:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0c2lahi0kxngap1bw0hhl140v8wj].[sum:Happiness Score:qk]' />
              <lod column='[federated.0c2lahi0kxngap1bw0hhl140v8wj].[none:Country:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='shape' value=':filled/circle' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0c2lahi0kxngap1bw0hhl140v8wj].[sum:GDP per Capita:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0c2lahi0kxngap1bw0hhl140v8wj].[sum:Happiness Score:qk]' />
              <lod column='[federated.0c2lahi0kxngap1bw0hhl140v8wj].[none:Country:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='shape' value=':filled/asterisk' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0c2lahi0kxngap1bw0hhl140v8wj].[sum:Freedom:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0c2lahi0kxngap1bw0hhl140v8wj].[sum:Happiness Score:qk]' />
              <lod column='[federated.0c2lahi0kxngap1bw0hhl140v8wj].[none:Country:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0c2lahi0kxngap1bw0hhl140v8wj].[sum:Corruption:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0c2lahi0kxngap1bw0hhl140v8wj].[sum:Happiness Score:qk]' />
              <lod column='[federated.0c2lahi0kxngap1bw0hhl140v8wj].[none:Country:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='shape' value=':filled/square' />
              </style-rule>
            </style>
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0c2lahi0kxngap1bw0hhl140v8wj].[sum:Social Support:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0c2lahi0kxngap1bw0hhl140v8wj].[sum:Happiness Score:qk]' />
              <lod column='[federated.0c2lahi0kxngap1bw0hhl140v8wj].[none:Country:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='shape' value='asterisk' />
              </style-rule>
            </style>
          </pane>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0c2lahi0kxngap1bw0hhl140v8wj].[sum:Generosity:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0c2lahi0kxngap1bw0hhl140v8wj].[sum:Happiness Score:qk]' />
              <lod column='[federated.0c2lahi0kxngap1bw0hhl140v8wj].[none:Country:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='shape' value=':filled/right-triangle' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0c2lahi0kxngap1bw0hhl140v8wj].[sum:Happiness Score:qk]</rows>
        <cols>([federated.0c2lahi0kxngap1bw0hhl140v8wj].[sum:Life Expectancy:qk] + ([federated.0c2lahi0kxngap1bw0hhl140v8wj].[sum:GDP per Capita:qk] + ([federated.0c2lahi0kxngap1bw0hhl140v8wj].[sum:Freedom:qk] + ([federated.0c2lahi0kxngap1bw0hhl140v8wj].[sum:Corruption:qk] + ([federated.0c2lahi0kxngap1bw0hhl140v8wj].[sum:Social Support:qk] + [federated.0c2lahi0kxngap1bw0hhl140v8wj].[sum:Generosity:qk])))))</cols>
        <pages>
          <column>[federated.0c2lahi0kxngap1bw0hhl140v8wj].[tyr:Year:ok]</column>
        </pages>
      </table>
      <simple-id uuid='{4C9CE776-6990-431E-93A9-5F4E51362421}' />
    </worksheet>
    <worksheet name='Happiness World Map'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontname='Tableau Bold' fontsize='12'>Which country you are from ?</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='World_Happiness_score' name='federated.0c2lahi0kxngap1bw0hhl140v8wj' />
          </datasources>
          <mapsources>
            <mapsource name='WorldMap' />
          </mapsources>
          <datasource-dependencies datasource='federated.0c2lahi0kxngap1bw0hhl140v8wj'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Happiness Score]' role='measure' type='quantitative' />
            <column-instance column='[Happiness Score]' derivation='Max' name='[max:Happiness Score:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0c2lahi0kxngap1bw0hhl140v8wj].[Latitude (generated)]' included-values='non-null' />
          <filter class='quantitative' column='[federated.0c2lahi0kxngap1bw0hhl140v8wj].[Longitude (generated)]' included-values='non-null' />
          <slices>
            <column>[federated.0c2lahi0kxngap1bw0hhl140v8wj].[Latitude (generated)]</column>
            <column>[federated.0c2lahi0kxngap1bw0hhl140v8wj].[Longitude (generated)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0c2lahi0kxngap1bw0hhl140v8wj].[Longitude (generated)]' field-type='quantitative' max='18397784.888125546' min='-17561457.146842249' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0c2lahi0kxngap1bw0hhl140v8wj].[Latitude (generated)]' field-type='quantitative' max='7867563.3634692915' min='-10986269.435383482' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.0c2lahi0kxngap1bw0hhl140v8wj].[none:Country:nk]' value='false' />
            <format attr='break-on-special' field='[federated.0c2lahi0kxngap1bw0hhl140v8wj].[none:Country:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.0c2lahi0kxngap1bw0hhl140v8wj].[none:Country:nk]' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='map-style' value='mapbox://styles/narendranasokan/clrykxlr4018t01p275n97zxj' />
            <format attr='washout' value='0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0c2lahi0kxngap1bw0hhl140v8wj].[none:Country:nk]' />
              <size column='[federated.0c2lahi0kxngap1bw0hhl140v8wj].[max:Happiness Score:qk]' />
              <text column='[federated.0c2lahi0kxngap1bw0hhl140v8wj].[none:Country:nk]' />
              <text column='[federated.0c2lahi0kxngap1bw0hhl140v8wj].[max:Happiness Score:qk]' />
              <lod column='[federated.0c2lahi0kxngap1bw0hhl140v8wj].[none:Country:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <encoding attr='density-color' palette='sunrise_sunset_diverging_10_0' type='interpolated' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='0.69165748357772827' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0c2lahi0kxngap1bw0hhl140v8wj].[Latitude (generated)]</rows>
        <cols>[federated.0c2lahi0kxngap1bw0hhl140v8wj].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{30481DA6-3EF6-4B60-A80B-85210516AE31}' />
    </worksheet>
    <worksheet name='Quater World Happiness'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontname='Tableau Bold' fontsize='12'>World Happiness Distribution</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='World_Happiness_score' name='federated.0c2lahi0kxngap1bw0hhl140v8wj' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0c2lahi0kxngap1bw0hhl140v8wj'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Happiness Score]' role='measure' type='quantitative' />
            <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Happiness Score]' derivation='Sum' name='[sum:Happiness Score:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year]' derivation='Quarter-Trunc' name='[tqr:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Year]' derivation='Year-Trunc' name='[tyr:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0c2lahi0kxngap1bw0hhl140v8wj].[none:Year:qk]' included-values='in-range-or-null'>
            <min>#2010-01-01#</min>
            <max>#2023-01-01#</max>
          </filter>
          <slices>
            <column>[federated.0c2lahi0kxngap1bw0hhl140v8wj].[none:Year:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='band-color' scope='rows' value='#000000' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='rows' value='#00000000' />
            <format attr='border-style' value='solid' />
            <format attr='border-color' value='#000000' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='rows' value='1' />
            <format attr='background-color' value='#00000000' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='refboxplot'>
            <format attr='boxplot-style' id='refline0' value='classic-two-tone' />
            <format attr='fill-color' id='refline0' value='#f0f0f0d9' />
            <format attr='palette' id='refline0' value='bp_yellow' />
            <format attr='opacity' id='refline0' value='247' />
            <format attr='whisker-end' id='refline0' value='large' />
            <format attr='whisker-stroke-color' id='refline0' value='#000000' />
            <format attr='whisker-stroke-size' id='refline0' value='2' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='div-level' scope='rows' value='0' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.0c2lahi0kxngap1bw0hhl140v8wj].[none:Year:qk]' value='Year'>
              <formatted-text>
                <run bold='true' fontname='Tableau Bold' fontsize='10'>Year</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='page-card-title'>
            <format attr='title' value='Year'>
              <formatted-text>
                <run bold='true' fontname='Tableau Bold' fontsize='10'>Year</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.0c2lahi0kxngap1bw0hhl140v8wj].[sum:Happiness Score:qk]' />
              <lod column='[federated.0c2lahi0kxngap1bw0hhl140v8wj].[none:Country:nk]' />
            </encodings>
            <reference-line axis-column='[federated.0c2lahi0kxngap1bw0hhl140v8wj].[sum:Happiness Score:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.0c2lahi0kxngap1bw0hhl140v8wj].[sum:Happiness Score:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.33983424305915833' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-color' value='#f28e2b' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0c2lahi0kxngap1bw0hhl140v8wj].[sum:Happiness Score:qk]</rows>
        <cols>[federated.0c2lahi0kxngap1bw0hhl140v8wj].[tqr:Year:ok]</cols>
        <pages>
          <column>[federated.0c2lahi0kxngap1bw0hhl140v8wj].[tyr:Year:ok]</column>
        </pages>
      </table>
      <simple-id uuid='{CF227770-FC23-47A0-A9ED-54CB04D97213}' />
    </worksheet>
    <worksheet name='Top Country Factor Analysis '>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontname='Tableau Bold' fontsize='12'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='World_Happiness_score' name='federated.0c2lahi0kxngap1bw0hhl140v8wj' />
          </datasources>
          <datasource-dependencies datasource='federated.0c2lahi0kxngap1bw0hhl140v8wj'>
            <column caption='Factor Analysis' datatype='integer' name='[Calculation_1319554740376866817]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Happiness Score] &gt;= 6.4 AND&#13;&#10;   [GDP per Capita] &gt;= 10.5 AND&#13;&#10;   [Social Support] &gt; 0.9 AND&#13;&#10;   [Life Expectancy] &gt; 69.9 AND&#13;&#10;   [Freedom] &gt; 0.88 AND&#13;&#10;   [Generosity] &gt; 0.12 AND&#13;&#10;   [Corruption] &lt; 0.66 THEN&#13;&#10;   1&#13;&#10;ELSEIF [Corruption] &gt; 0.87 THEN&#13;&#10;   1&#13;&#10;ELSE&#13;&#10;   0&#13;&#10;END' />
            </column>
            <column datatype='real' name='[Corruption]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Freedom]' role='measure' type='quantitative' />
            <column datatype='real' name='[GDP per Capita]' role='measure' type='quantitative' />
            <column datatype='real' name='[Generosity]' role='measure' type='quantitative' />
            <column datatype='real' name='[Happiness Score]' role='measure' type='quantitative' />
            <column datatype='real' name='[Life Expectancy]' role='measure' type='quantitative' />
            <column datatype='real' name='[Social Support]' role='measure' type='quantitative' />
            <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Calculation_1319554740376866817]' derivation='Max' name='[max:Calculation_1319554740376866817:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Happiness Score]' derivation='None' name='[none:Happiness Score:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year]' derivation='Year-Trunc' name='[tyr:Year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Year]' derivation='Year' name='[yr:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0c2lahi0kxngap1bw0hhl140v8wj].[none:Country:nk]'>
            <groupfilter expression='AVG([Calculation_1319554740376866817])&gt;0' function='filter' user:ui-marker='filter-by'>
              <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                <groupfilter function='level-members' level='[none:Country:nk]' />
                <groupfilter function='member' level='[none:Country:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.0c2lahi0kxngap1bw0hhl140v8wj].[none:Happiness Score:qk]' included-values='in-range'>
            <min>6.6200000000000001</min>
            <max>7.8893499374389648</max>
          </filter>
          <slices>
            <column>[federated.0c2lahi0kxngap1bw0hhl140v8wj].[none:Country:nk]</column>
            <column>[federated.0c2lahi0kxngap1bw0hhl140v8wj].[none:Happiness Score:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='cell-w' value='20' />
            <format attr='cell-h' value='20' />
            <format attr='cell' value='20' />
            <format attr='cell-q' value='100' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-size' value='10' />
            <format attr='font-weight' value='bold' />
            <format attr='font-family' value='Tableau Bold' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-family' field='[federated.0c2lahi0kxngap1bw0hhl140v8wj].[none:Country:nk]' value='Tableau Bold' />
            <format attr='font-size' field='[federated.0c2lahi0kxngap1bw0hhl140v8wj].[none:Country:nk]' value='10' />
            <format attr='font-weight' field='[federated.0c2lahi0kxngap1bw0hhl140v8wj].[none:Country:nk]' value='bold' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.0c2lahi0kxngap1bw0hhl140v8wj].[max:Calculation_1319554740376866817:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0c2lahi0kxngap1bw0hhl140v8wj].[none:Country:nk]' />
              <size column='[federated.0c2lahi0kxngap1bw0hhl140v8wj].[max:Calculation_1319554740376866817:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run>Country:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0c2lahi0kxngap1bw0hhl140v8wj].[none:Country:nk]>]]></run>
                <run>Æ&#10;</run>
                <run>Year:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0c2lahi0kxngap1bw0hhl140v8wj].[tyr:Year:ok]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.7251380681991577' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0c2lahi0kxngap1bw0hhl140v8wj].[none:Country:nk]</rows>
        <cols>[federated.0c2lahi0kxngap1bw0hhl140v8wj].[yr:Year:ok]</cols>
        <pages>
          <column>[federated.0c2lahi0kxngap1bw0hhl140v8wj].[tyr:Year:ok]</column>
        </pages>
        <page-trail-options enabled='true' />
      </table>
      <simple-id uuid='{38889BD4-AB5F-489C-82D4-1232779CC11C}' />
    </worksheet>
    <worksheet name='Top Country Trend Analysis'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontname='Tableau Bold' fontsize='12'>Upward Trend</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='World_Happiness_score' name='federated.0c2lahi0kxngap1bw0hhl140v8wj' />
          </datasources>
          <datasource-dependencies datasource='federated.0c2lahi0kxngap1bw0hhl140v8wj'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Happiness Score]' role='measure' type='quantitative' />
            <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Happiness Score]' derivation='None' name='[none:Happiness Score:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Happiness Score]' derivation='Sum' name='[sum:Happiness Score:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year]' derivation='Year-Trunc' name='[tyr:Year:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0c2lahi0kxngap1bw0hhl140v8wj].[none:Country:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Azerbaijan&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Benin&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Gabon&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Georgia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Haiti&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Jamaica&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Kosovo&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Kyrgyzstan&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Latvia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Liberia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Malta&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Philippines&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Taiwan Province of China&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Tajikistan&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.0c2lahi0kxngap1bw0hhl140v8wj].[none:Happiness Score:qk]' included-values='in-range'>
            <min>1.2812711000442505</min>
            <max>7.8893499374389648</max>
          </filter>
          <slices>
            <column>[federated.0c2lahi0kxngap1bw0hhl140v8wj].[none:Happiness Score:qk]</column>
            <column>[federated.0c2lahi0kxngap1bw0hhl140v8wj].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0c2lahi0kxngap1bw0hhl140v8wj].[tyr:Year:qk]' scope='cols' value='Year' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-size' value='10' />
            <format attr='font-weight' value='bold' />
            <format attr='font-family' value='Tableau Bold' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-family' field='[federated.0c2lahi0kxngap1bw0hhl140v8wj].[none:Country:nk]' value='Tableau Bold' />
            <format attr='font-size' field='[federated.0c2lahi0kxngap1bw0hhl140v8wj].[none:Country:nk]' value='10' />
            <format attr='font-weight' field='[federated.0c2lahi0kxngap1bw0hhl140v8wj].[none:Country:nk]' value='bold' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#00000000' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.0c2lahi0kxngap1bw0hhl140v8wj].[none:Country:nk]' value='Top Countries' />
          </style-rule>
          <style-rule element='data-highlighter-title'>
            <format attr='title' field='[federated.0c2lahi0kxngap1bw0hhl140v8wj].[none:Country:nk]' value='Highlight Country' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0c2lahi0kxngap1bw0hhl140v8wj].[none:Country:nk]' />
              <text column='[federated.0c2lahi0kxngap1bw0hhl140v8wj].[none:Country:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Country:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0c2lahi0kxngap1bw0hhl140v8wj].[none:Country:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Year:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0c2lahi0kxngap1bw0hhl140v8wj].[tyr:Year:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Happiness Score:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0c2lahi0kxngap1bw0hhl140v8wj].[sum:Happiness Score:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0c2lahi0kxngap1bw0hhl140v8wj].[sum:Happiness Score:qk]</rows>
        <cols>[federated.0c2lahi0kxngap1bw0hhl140v8wj].[tyr:Year:qk]</cols>
      </table>
      <simple-id uuid='{BDEC1FAA-A89C-42DB-BB0E-C8EF4AB7BD44}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Correlation Dashboard'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#128bf444' />
        </style-rule>
        <style-rule element='dash-title'>
          <format attr='background-color' value='#00000000' />
          <format attr='font-family' value='Tableau Bold' />
          <format attr='text-align' value='center' />
        </style-rule>
      </style>
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='5' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98272' id='8' param='vert' type-v2='layout-flow' w='99002' x='499' y='864'>
            <zone h='6156' id='9' type-v2='title' w='99002' x='499' y='864'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='82829' id='10' name='Happiness Score Correlations' w='63822' x='721' y='16523' />
        <zone h='9503' id='11' name='Happiness Score Correlations' pane-specification-id='1' param='[federated.0c2lahi0kxngap1bw0hhl140v8wj].[sum:Happiness Score:qk]' type-v2='color' w='25080' x='67109' y='15659' />
        <zone count='0' h='14363' id='12' name='Happiness Score Correlations' synchronized='1' type-v2='currpage' w='24283' x='67375' y='26890' />
        <zone forceUpdate='true' h='4968' id='76' type-v2='text' w='11902' x='77471' y='42441'>
          <formatted-text>
            <run bold='true' fontname='Tableau Bold' fontsize='10'>Correlation Matrix</run>
          </formatted-text>
        </zone>
        <zone h='63499' id='75' is-scaled='1' param='C:/Users/laksh/OneDrive/Documents/My Tableau Repository/Shapes/HeatMap/Final HeatMap.png' type-v2='bitmap' w='37938' x='65090' y='42657' />
        <zone h='5616' id='170' type-v2='dashboard-object' w='14784' x='1923' y='9719'>
          <button action='tabdoc:goto-sheet window-id=&quot;{CBFB9040-64BB-4F37-BDE2-7867413E2DE7}&quot;' button-type='text'>
            <button-visual-state>
              <caption>Back Dashboard</caption>
              <tooltip-text>Navigate to Main Dashboard</tooltip-text>
              <button-caption-font-style fontcolor='#ffffff' fontname='Tableau Bold' fontsize='12' />
              <format attr='background-color' value='#fec000' />
              <format attr='border-style' value='solid' />
              <format attr='border-width' value='1' />
              <format attr='border-color' value='#ffffff' />
            </button-visual-state>
          </button>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run bold='true'>&lt;Sheet Name&gt;</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='950' minheight='950' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='318' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98272' id='317' param='vert' type-v2='layout-flow' w='99002' x='499' y='864'>
                <zone h='6156' id='9' type-v2='title' w='99002' x='499' y='864'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='5616' id='170' type-v2='dashboard-object' w='14784' x='1923' y='9719'>
                  <button action='tabdoc:goto-sheet window-id=&quot;{CBFB9040-64BB-4F37-BDE2-7867413E2DE7}&quot;' button-type='text'>
                    <button-visual-state>
                      <caption>Back Dashboard</caption>
                      <tooltip-text>Navigate to Main Dashboard</tooltip-text>
                      <button-caption-font-style fontcolor='#ffffff' fontname='Tableau Bold' fontsize='12' />
                      <format attr='background-color' value='#fec000' />
                      <format attr='border-style' value='solid' />
                      <format attr='border-width' value='1' />
                      <format attr='border-color' value='#ffffff' />
                    </button-visual-state>
                  </button>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='82829' id='10' is-fixed='true' name='Happiness Score Correlations' w='63822' x='721' y='16523'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='9503' id='11' name='Happiness Score Correlations' pane-specification-id='1' param='[federated.0c2lahi0kxngap1bw0hhl140v8wj].[sum:Happiness Score:qk]' type-v2='color' w='25080' x='67109' y='15659'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='4968' id='76' type-v2='text' w='11902' x='77471' y='42441'>
                  <formatted-text>
                    <run bold='true' fontname='Tableau Bold' fontsize='10'>Correlation Matrix</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='63499' id='75' is-fixed='true' is-scaled='1' param='C:/Users/laksh/OneDrive/Documents/My Tableau Repository/Shapes/HeatMap/Final HeatMap.png' type-v2='bitmap' w='37938' x='65090' y='42657'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone count='0' h='14363' id='12' name='Happiness Score Correlations' synchronized='1' type-v2='currpage' w='24283' x='67375' y='26890'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{0E1AFD0E-90BD-4161-9D70-EAD4BEACF165}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Critical Features Dashboard'>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#128bf444' />
        </style-rule>
        <style-rule element='dash-title'>
          <format attr='background-color' value='#fec000' />
        </style-rule>
      </style>
      <size maxheight='2100' maxwidth='1600' sizing-mode='range' />
      <zones>
        <zone h='100000' id='15' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98224' id='18' param='horz' type-v2='layout-flow' w='98986' x='507' y='888'>
            <zone h='98224' id='16' type-v2='layout-basic' w='98986' x='507' y='888' />
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone forceUpdate='true' h='4746' id='3' type-v2='text' w='26625' x='35750' y='2157'>
          <formatted-text>
            <run bold='true' fontname='Tableau Bold' fontsize='16'>Critical Features </run>
          </formatted-text>
        </zone>
        <zone h='80022' id='8' name='Dependent Features' w='42195' x='-3363' y='17203' />
        <zone h='22546' id='10' name='Dependent Features' pane-specification-id='5' param='[federated.0c2lahi0kxngap1bw0hhl140v8wj].[:Measure Names]' type-v2='color' w='10688' x='40000' y='22438' />
        <zone count='1' h='17907' id='11' name='Dependent Features' name1='Top Country Factor Analysis ' synchronized='1' type-v2='currpage' w='10563' x='40125' y='51456' />
        <zone h='79612' id='14' name='Top Country Factor Analysis ' w='53125' x='52750' y='18123' />
        <zone h='5609' id='41' type-v2='dashboard-object' w='14750' x='2000' y='8198'>
          <button action='tabdoc:goto-sheet window-id=&quot;{CBFB9040-64BB-4F37-BDE2-7867413E2DE7}&quot;' button-type='text'>
            <button-visual-state>
              <caption>Back Dashboard</caption>
              <tooltip-text>Navigate to Main Dashboard</tooltip-text>
              <button-caption-font-style fontcolor='#ffffff' fontname='Tableau Bold' fontsize='12' />
              <format attr='background-color' value='#fec000' />
              <format attr='border-style' value='solid' />
              <format attr='border-width' value='1' />
              <format attr='border-color' value='#ffffff' />
            </button-visual-state>
          </button>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='850' minheight='850' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='191' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98224' id='190' param='vert' type-v2='layout-flow' w='98986' x='507' y='888'>
                <zone forceUpdate='true' h='4746' id='3' type-v2='text' w='26625' x='35750' y='2157'>
                  <formatted-text>
                    <run bold='true' fontname='Tableau Bold' fontsize='16'>Critical Features </run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='5609' id='41' type-v2='dashboard-object' w='14750' x='2000' y='8198'>
                  <button action='tabdoc:goto-sheet window-id=&quot;{CBFB9040-64BB-4F37-BDE2-7867413E2DE7}&quot;' button-type='text'>
                    <button-visual-state>
                      <caption>Back Dashboard</caption>
                      <tooltip-text>Navigate to Main Dashboard</tooltip-text>
                      <button-caption-font-style fontcolor='#ffffff' fontname='Tableau Bold' fontsize='12' />
                      <format attr='background-color' value='#fec000' />
                      <format attr='border-style' value='solid' />
                      <format attr='border-width' value='1' />
                      <format attr='border-color' value='#ffffff' />
                    </button-visual-state>
                  </button>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='80022' id='8' is-fixed='true' name='Dependent Features' w='42195' x='-3363' y='17203'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='22546' id='10' name='Dependent Features' pane-specification-id='5' param='[federated.0c2lahi0kxngap1bw0hhl140v8wj].[:Measure Names]' type-v2='color' w='10688' x='40000' y='22438'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='79612' id='14' is-fixed='true' name='Top Country Factor Analysis ' w='53125' x='52750' y='18123'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone count='1' h='17907' id='11' name='Dependent Features' name1='Top Country Factor Analysis ' synchronized='1' type-v2='currpage' w='10563' x='40125' y='51456'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{839B00B1-5ACF-41D9-AAC9-5F69A44C642E}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Finds Reason Dashboard '>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#128bf444' />
        </style-rule>
        <style-rule element='dash-title'>
          <format attr='background-color' value='#fec000' />
        </style-rule>
      </style>
      <size maxheight='1500' maxwidth='1600' sizing-mode='range' />
      <zones>
        <zone h='75028' id='3' name='Quater World Happiness' w='32932' x='-2280' y='20089' />
        <zone count='2' h='8738' id='5' name='Quater World Happiness' name1='15 Happy Countries' name2='15 UnHappy Countries' synchronized='1' type-v2='currpage' w='29375' x='66500' y='11435' />
        <zone h='5882' id='6' is-centered='0' is-scaled='1' param='C:/Users/laksh/Downloads/happy.png' type-v2='bitmap' w='4315' x='-3490' y='28191' />
        <zone h='5216' id='7' is-centered='0' is-scaled='1' param='C:/Users/laksh/Downloads/sad.png' type-v2='bitmap' w='4378' x='-3236' y='79245' />
        <zone forceUpdate='true' h='8414' id='16' type-v2='text' w='67625' x='19125' y='2373'>
          <formatted-text>
            <run bold='true' fontname='Benton Sans Book' fontsize='15'>Why Some Countries Are Always the Best and Others Stay at the Bottom?</run>
          </formatted-text>
        </zone>
        <zone h='76915' id='17' name='15 Happy Countries' w='33688' x='32000' y='20173' />
        <zone h='77238' id='20' name='15 UnHappy Countries' w='31688' x='68438' y='20173' />
        <zone h='5609' id='53' type-v2='dashboard-object' w='14750' x='2250' y='11758'>
          <button action='tabdoc:goto-sheet window-id=&quot;{CBFB9040-64BB-4F37-BDE2-7867413E2DE7}&quot;' button-type='text'>
            <button-visual-state>
              <caption>Back Dashboard</caption>
              <tooltip-text>Navigate to Main Dashboard</tooltip-text>
              <button-caption-font-style fontcolor='#ffffff' fontname='Tableau Bold' fontsize='12' />
              <format attr='background-color' value='#fec000' />
              <format attr='border-style' value='solid' />
              <format attr='border-width' value='1' />
              <format attr='border-color' value='#ffffff' />
            </button-visual-state>
          </button>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1250' minheight='1250' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='203' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98224' id='202' param='vert' type-v2='layout-flow' w='98986' x='507' y='888'>
                <zone forceUpdate='true' h='8414' id='16' type-v2='text' w='67625' x='19125' y='2373'>
                  <formatted-text>
                    <run bold='true' fontname='Benton Sans Book' fontsize='15'>Why Some Countries Are Always the Best and Others Stay at the Bottom?</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='5609' id='53' type-v2='dashboard-object' w='14750' x='2250' y='11758'>
                  <button action='tabdoc:goto-sheet window-id=&quot;{CBFB9040-64BB-4F37-BDE2-7867413E2DE7}&quot;' button-type='text'>
                    <button-visual-state>
                      <caption>Back Dashboard</caption>
                      <tooltip-text>Navigate to Main Dashboard</tooltip-text>
                      <button-caption-font-style fontcolor='#ffffff' fontname='Tableau Bold' fontsize='12' />
                      <format attr='background-color' value='#fec000' />
                      <format attr='border-style' value='solid' />
                      <format attr='border-width' value='1' />
                      <format attr='border-color' value='#ffffff' />
                    </button-visual-state>
                  </button>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='75028' id='3' is-fixed='true' name='Quater World Happiness' w='32932' x='-2280' y='20089'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='76915' id='17' is-fixed='true' name='15 Happy Countries' w='33688' x='32000' y='20173'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='77238' id='20' is-fixed='true' name='15 UnHappy Countries' w='31688' x='68438' y='20173'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='88' h='5882' id='6' is-centered='0' is-fixed='true' is-scaled='1' param='C:/Users/laksh/Downloads/happy.png' type-v2='bitmap' w='4315' x='-3490' y='28191'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='78' h='5216' id='7' is-centered='0' is-fixed='true' is-scaled='1' param='C:/Users/laksh/Downloads/sad.png' type-v2='bitmap' w='4378' x='-3236' y='79245'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone count='2' h='8738' id='5' name='Quater World Happiness' name1='15 Happy Countries' name2='15 UnHappy Countries' synchronized='1' type-v2='currpage' w='29375' x='66500' y='11435'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{5FC8E738-D5EC-4452-8642-E029FEEDD0F0}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Main Dashboard'>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#39b2e544' />
        </style-rule>
      </style>
      <size maxheight='1500' maxwidth='1600' sizing-mode='range' />
      <zones>
        <zone h='75028' id='9' name='Happiness World Map' w='77157' x='21701' y='20089' />
        <zone h='9385' id='10' type-v2='text' w='46625' x='35188' y='5286'>
          <formatted-text>
            <run bold='true' fontname='Arial Black' fontsize='18'>What Does Humans Need in Life?</run>
          </formatted-text>
        </zone>
        <zone h='68036' id='11' layout-strategy-id='distribute-evenly' param='vert' type-v2='layout-flow' w='17830' x='1396' y='26859'>
          <zone h='13652' id='13' type-v2='dashboard-object' w='17860' x='1393' y='26859'>
            <button action='tabdoc:goto-sheet window-id=&quot;{CBFB9040-64BB-4F37-BDE2-7867413E2DE7}&quot;' button-type='text'>
              <button-visual-state>
                <caption>Overview</caption>
                <tooltip-text>Overview</tooltip-text>
                <button-caption-font-style fontcolor='#ffffff' fontname='Tableau Bold' fontsize='12' />
                <format attr='background-color' value='#fec000' />
                <format attr='border-style' value='solid' />
                <format attr='border-width' value='1' />
                <format attr='border-color' value='#ffffff' />
              </button-visual-state>
            </button>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='13651' id='14' type-v2='dashboard-object' w='17860' x='1393' y='40511'>
            <button action='tabdoc:goto-sheet window-id=&quot;{8ED251D1-F813-4E02-96C6-763B7EA7ED7E}&quot;' button-type='text'>
              <button-visual-state>
                <caption>Lets finds the reason</caption>
                <tooltip-text>Lets find the reason</tooltip-text>
                <button-caption-font-style fontcolor='#ffffff' fontname='Tableau Bold' fontsize='12' />
                <format attr='background-color' value='#fec000' />
                <format attr='border-style' value='solid' />
                <format attr='border-width' value='1' />
                <format attr='border-color' value='#ffffff' />
              </button-visual-state>
            </button>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='13652' id='12' type-v2='dashboard-object' w='17860' x='1393' y='54162'>
            <button action='tabdoc:goto-sheet window-id=&quot;{64D47F4F-DC40-4769-BCAC-D934617066E8}&quot;' button-type='text'>
              <button-visual-state>
                <caption>Critical Features</caption>
                <tooltip-text>Critical Features </tooltip-text>
                <button-caption-font-style fontcolor='#ffffff' fontname='Tableau Bold' fontsize='12' />
                <format attr='background-color' value='#fec000' />
                <format attr='border-style' value='solid' />
                <format attr='border-width' value='1' />
                <format attr='border-color' value='#ffffff' />
              </button-visual-state>
            </button>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='13540' id='17' type-v2='dashboard-object' w='17860' x='1393' y='67814'>
            <button action='tabdoc:goto-sheet window-id=&quot;{82463579-274D-47AF-A191-F8B404A21CB5}&quot;' button-type='text'>
              <button-visual-state>
                <caption>Correlation Features </caption>
                <tooltip-text>Correlation between features</tooltip-text>
                <button-caption-font-style fontcolor='#ffffff' fontname='Tableau Bold' fontsize='12' />
                <format attr='background-color' value='#fec000' />
                <format attr='border-style' value='solid' />
                <format attr='border-width' value='1' />
                <format attr='border-color' value='#ffffff' />
              </button-visual-state>
            </button>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='13541' id='123' type-v2='dashboard-object' w='17860' x='1393' y='81354'>
            <button action='tabdoc:goto-sheet window-id=&quot;{66E47821-9EC0-427E-B383-87420AD89CBA}&quot;' button-type='text'>
              <button-visual-state>
                <caption>Trend Analysis</caption>
                <tooltip-text>Trend Analysis</tooltip-text>
                <button-caption-font-style fontcolor='#ffffff' fontname='Tableau Bold' fontsize='12' />
                <format attr='background-color' value='#fec000' />
                <format attr='border-style' value='solid' />
                <format attr='border-width' value='1' />
                <format attr='border-color' value='#ffffff' />
              </button-visual-state>
            </button>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='217' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98224' id='216' param='vert' type-v2='layout-flow' w='98986' x='507' y='888'>
                <zone h='9385' id='10' type-v2='text' w='46625' x='35188' y='5286'>
                  <formatted-text>
                    <run bold='true' fontname='Arial Black' fontsize='18'>What Does Humans Need in Life?</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='75028' id='9' is-fixed='true' name='Happiness World Map' w='77157' x='21701' y='20089'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='13652' id='13' type-v2='dashboard-object' w='17860' x='1393' y='26859'>
                  <button action='tabdoc:goto-sheet window-id=&quot;{CBFB9040-64BB-4F37-BDE2-7867413E2DE7}&quot;' button-type='text'>
                    <button-visual-state>
                      <caption>Overview</caption>
                      <tooltip-text>Overview</tooltip-text>
                      <button-caption-font-style fontcolor='#ffffff' fontname='Tableau Bold' fontsize='12' />
                      <format attr='background-color' value='#fec000' />
                      <format attr='border-style' value='solid' />
                      <format attr='border-width' value='1' />
                      <format attr='border-color' value='#ffffff' />
                    </button-visual-state>
                  </button>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='13651' id='14' type-v2='dashboard-object' w='17860' x='1393' y='40511'>
                  <button action='tabdoc:goto-sheet window-id=&quot;{8ED251D1-F813-4E02-96C6-763B7EA7ED7E}&quot;' button-type='text'>
                    <button-visual-state>
                      <caption>Lets finds the reason</caption>
                      <tooltip-text>Lets find the reason</tooltip-text>
                      <button-caption-font-style fontcolor='#ffffff' fontname='Tableau Bold' fontsize='12' />
                      <format attr='background-color' value='#fec000' />
                      <format attr='border-style' value='solid' />
                      <format attr='border-width' value='1' />
                      <format attr='border-color' value='#ffffff' />
                    </button-visual-state>
                  </button>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='13652' id='12' type-v2='dashboard-object' w='17860' x='1393' y='54162'>
                  <button action='tabdoc:goto-sheet window-id=&quot;{64D47F4F-DC40-4769-BCAC-D934617066E8}&quot;' button-type='text'>
                    <button-visual-state>
                      <caption>Critical Features</caption>
                      <tooltip-text>Critical Features </tooltip-text>
                      <button-caption-font-style fontcolor='#ffffff' fontname='Tableau Bold' fontsize='12' />
                      <format attr='background-color' value='#fec000' />
                      <format attr='border-style' value='solid' />
                      <format attr='border-width' value='1' />
                      <format attr='border-color' value='#ffffff' />
                    </button-visual-state>
                  </button>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='13540' id='17' type-v2='dashboard-object' w='17860' x='1393' y='67814'>
                  <button action='tabdoc:goto-sheet window-id=&quot;{82463579-274D-47AF-A191-F8B404A21CB5}&quot;' button-type='text'>
                    <button-visual-state>
                      <caption>Correlation Features </caption>
                      <tooltip-text>Correlation between features</tooltip-text>
                      <button-caption-font-style fontcolor='#ffffff' fontname='Tableau Bold' fontsize='12' />
                      <format attr='background-color' value='#fec000' />
                      <format attr='border-style' value='solid' />
                      <format attr='border-width' value='1' />
                      <format attr='border-color' value='#ffffff' />
                    </button-visual-state>
                  </button>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='13541' id='123' type-v2='dashboard-object' w='17860' x='1393' y='81354'>
                  <button action='tabdoc:goto-sheet window-id=&quot;{66E47821-9EC0-427E-B383-87420AD89CBA}&quot;' button-type='text'>
                    <button-visual-state>
                      <caption>Trend Analysis</caption>
                      <tooltip-text>Trend Analysis</tooltip-text>
                      <button-caption-font-style fontcolor='#ffffff' fontname='Tableau Bold' fontsize='12' />
                      <format attr='background-color' value='#fec000' />
                      <format attr='border-style' value='solid' />
                      <format attr='border-width' value='1' />
                      <format attr='border-color' value='#ffffff' />
                    </button-visual-state>
                  </button>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{15D1236B-A4FA-420C-8E80-BA7B39CDE2BC}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Trend Analysis'>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#128bf444' />
        </style-rule>
        <style-rule element='dash-title'>
          <format attr='background-color' value='#fec000' />
        </style-rule>
      </style>
      <size maxheight='1500' maxwidth='1600' sizing-mode='range' />
      <datasources>
        <datasource caption='World_Happiness_score' name='federated.0c2lahi0kxngap1bw0hhl140v8wj' />
      </datasources>
      <datasource-dependencies datasource='federated.0c2lahi0kxngap1bw0hhl140v8wj'>
        <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
        <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='110' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98224' id='113' param='horz' type-v2='layout-flow' w='98986' x='507' y='888'>
            <zone h='98224' id='111' type-v2='layout-basic' w='98986' x='507' y='888' />
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='5609' id='40' type-v2='dashboard-object' w='14750' x='1125' y='15426'>
          <button action='tabdoc:goto-sheet window-id=&quot;{CBFB9040-64BB-4F37-BDE2-7867413E2DE7}&quot;' button-type='text'>
            <button-visual-state>
              <caption>Back Dashboard</caption>
              <tooltip-text>Navigate to Main Dashboard</tooltip-text>
              <button-caption-font-style fontcolor='#ffffff' fontname='Tableau Bold' fontsize='12' />
              <format attr='background-color' value='#fec000' />
              <format attr='border-style' value='solid' />
              <format attr='border-width' value='1' />
              <format attr='border-color' value='#ffffff' />
            </button-visual-state>
          </button>
        </zone>
        <zone forceUpdate='true' h='4423' id='55' type-v2='text' w='39313' x='32750' y='3452'>
          <formatted-text>
            <run bold='true' fontalignment='1' fontname='Tableau Bold' fontsize='16'>Country Trend Analysis</run>
          </formatted-text>
        </zone>
        <zone h='74757' id='137' name='Down Country Trend Analysis ' w='35188' x='52063' y='23625' />
        <zone h='51241' id='138' mode='typeinlist' name='Down Country Trend Analysis ' param='[federated.0c2lahi0kxngap1bw0hhl140v8wj].[none:Country:nk]' type-v2='filter' w='11063' x='88125' y='43581' />
        <zone h='11758' id='139' name='Down Country Trend Analysis ' param='[federated.0c2lahi0kxngap1bw0hhl140v8wj].[none:Country:nk]' type-v2='highlighter' w='10625' x='88250' y='29558' />
        <zone h='72816' id='142' name='Top Country Trend Analysis' w='36500' x='750' y='25566' />
        <zone h='50701' id='143' mode='typeinlist' name='Top Country Trend Analysis' param='[federated.0c2lahi0kxngap1bw0hhl140v8wj].[none:Country:nk]' type-v2='filter' w='10500' x='38688' y='44552' />
        <zone h='11650' id='144' name='Top Country Trend Analysis' param='[federated.0c2lahi0kxngap1bw0hhl140v8wj].[none:Country:nk]' type-v2='highlighter' w='11500' x='38625' y='31715' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1000' minheight='1000' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='198' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98224' id='197' param='vert' type-v2='layout-flow' w='98986' x='507' y='888'>
                <zone forceUpdate='true' h='4423' id='55' type-v2='text' w='39313' x='32750' y='3452'>
                  <formatted-text>
                    <run bold='true' fontalignment='1' fontname='Tableau Bold' fontsize='16'>Country Trend Analysis</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='5609' id='40' type-v2='dashboard-object' w='14750' x='1125' y='15426'>
                  <button action='tabdoc:goto-sheet window-id=&quot;{CBFB9040-64BB-4F37-BDE2-7867413E2DE7}&quot;' button-type='text'>
                    <button-visual-state>
                      <caption>Back Dashboard</caption>
                      <tooltip-text>Navigate to Main Dashboard</tooltip-text>
                      <button-caption-font-style fontcolor='#ffffff' fontname='Tableau Bold' fontsize='12' />
                      <format attr='background-color' value='#fec000' />
                      <format attr='border-style' value='solid' />
                      <format attr='border-width' value='1' />
                      <format attr='border-color' value='#ffffff' />
                    </button-visual-state>
                  </button>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='51241' id='138' mode='checkdropdown' name='Down Country Trend Analysis ' param='[federated.0c2lahi0kxngap1bw0hhl140v8wj].[none:Country:nk]' type-v2='filter' w='11063' x='88125' y='43581'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='11758' id='139' name='Down Country Trend Analysis ' param='[federated.0c2lahi0kxngap1bw0hhl140v8wj].[none:Country:nk]' type-v2='highlighter' w='10625' x='88250' y='29558'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='74757' id='137' is-fixed='true' name='Down Country Trend Analysis ' w='35188' x='52063' y='23625'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='50701' id='143' mode='checkdropdown' name='Top Country Trend Analysis' param='[federated.0c2lahi0kxngap1bw0hhl140v8wj].[none:Country:nk]' type-v2='filter' w='10500' x='38688' y='44552'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='11650' id='144' name='Top Country Trend Analysis' param='[federated.0c2lahi0kxngap1bw0hhl140v8wj].[none:Country:nk]' type-v2='highlighter' w='11500' x='38625' y='31715'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='72816' id='142' is-fixed='true' name='Top Country Trend Analysis' w='36500' x='750' y='25566'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{B23D8D4A-0BB7-42A5-BCDE-1684BD9A0862}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.5' source-height='44'>
    <window class='worksheet' name='Dependent Features'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0c2lahi0kxngap1bw0hhl140v8wj].[:Measure Names]' show-morefewerbutton='false' type='filter' />
            <card type='currpage' />
            <card pane-specification-id='5' param='[federated.0c2lahi0kxngap1bw0hhl140v8wj].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>#2023-01-01 00:00:00#</bucket>
          </multibucket>
        </current-page>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0c2lahi0kxngap1bw0hhl140v8wj].[none:Calculation_1319554740376866817:qk]</field>
            <field>[federated.0c2lahi0kxngap1bw0hhl140v8wj].[none:Corruption:qk]</field>
            <field>[federated.0c2lahi0kxngap1bw0hhl140v8wj].[none:Happiness Score:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{68944951-91D8-4994-B0C6-7E8E99450CD7}' />
    </window>
    <window class='worksheet' name='Happiness Score Correlations'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0c2lahi0kxngap1bw0hhl140v8wj].[sum:Happiness Score:qk]' type='color' />
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>#2023-01-01 00:00:00#</bucket>
          </multibucket>
        </current-page>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0c2lahi0kxngap1bw0hhl140v8wj].[none:Country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9B6B5179-A535-4A7F-A8D3-5BC23DBEC514}' />
    </window>
    <window class='worksheet' name='Happiness World Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{298F9D10-FC01-48D9-9C62-F784D24DC256}' />
    </window>
    <window class='worksheet' name='Quater World Happiness'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0c2lahi0kxngap1bw0hhl140v8wj].[none:Year:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>#2020-01-01 00:00:00#</bucket>
          </multibucket>
        </current-page>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0c2lahi0kxngap1bw0hhl140v8wj].[tyr:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4A592515-DCE2-41F6-AB5C-FCBE760BEAB8}' />
    </window>
    <window class='worksheet' name='15 UnHappy Countries'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>#2023-01-01 00:00:00#</bucket>
          </multibucket>
        </current-page>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{BFD4E32B-1832-44F0-931C-89673C2A04E0}' />
    </window>
    <window class='worksheet' name='15 Happy Countries'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>#2023-01-01 00:00:00#</bucket>
          </multibucket>
        </current-page>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{7C9D2EAC-A9C6-4848-9914-3A7606C7C54F}' />
    </window>
    <window class='worksheet' name='Top Country Factor Analysis '>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>#2023-01-01 00:00:00#</bucket>
          </multibucket>
        </current-page>
        <zoom type='entire-view' />
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <fields>
                  <field>[federated.0c2lahi0kxngap1bw0hhl140v8wj].[none:Country:nk]</field>
                </fields>
                <multibucket>
                  <bucket>&quot;Australia&quot;</bucket>
                </multibucket>
              </node-reference>
              <page-reference>
                <fields>
                  <field>[federated.0c2lahi0kxngap1bw0hhl140v8wj].[tyr:Year:ok]</field>
                </fields>
                <multibucket>
                  <bucket>#2023-01-01 00:00:00#</bucket>
                </multibucket>
              </page-reference>
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.0c2lahi0kxngap1bw0hhl140v8wj].[none:Calculation_1319554740372332544:nk]</field>
            <field>[federated.0c2lahi0kxngap1bw0hhl140v8wj].[none:Calculation_1319554740372332544:ok]</field>
            <field>[federated.0c2lahi0kxngap1bw0hhl140v8wj].[none:Calculation_1319554740376866817:qk]</field>
            <field>[federated.0c2lahi0kxngap1bw0hhl140v8wj].[none:Country:nk]</field>
            <field>[federated.0c2lahi0kxngap1bw0hhl140v8wj].[none:Happiness Score:qk]</field>
            <field>[federated.0c2lahi0kxngap1bw0hhl140v8wj].[tyr:Year:qk]</field>
            <field>[federated.0c2lahi0kxngap1bw0hhl140v8wj].[yr:Year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F35941D6-54F6-41D0-97EE-A3B8B7FBFEB9}' />
    </window>
    <window class='worksheet' maximized='true' name='Down Country Trend Analysis '>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='typeinlist' param='[federated.0c2lahi0kxngap1bw0hhl140v8wj].[none:Country:nk]' type='filter' />
            <card param='[federated.0c2lahi0kxngap1bw0hhl140v8wj].[none:Country:nk]' type='highlighter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <tuple-selection>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0c2lahi0kxngap1bw0hhl140v8wj].[tyr:Year:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0c2lahi0kxngap1bw0hhl140v8wj].[sum:Happiness Score:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0c2lahi0kxngap1bw0hhl140v8wj].[none:Country:nk]</field>
                  <field>[federated.0c2lahi0kxngap1bw0hhl140v8wj].[sum:Happiness Score:qk]</field>
                  <field>[federated.0c2lahi0kxngap1bw0hhl140v8wj].[tyr:Year:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Venezuela&quot;</value>
                <value>6.1360964775085449</value>
                <value>#2014-01-01 00:00:00#</value>
              </tuple>
            </tuple-reference>
          </tuple-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.0c2lahi0kxngap1bw0hhl140v8wj].[:Measure Names]</field>
            <field>[federated.0c2lahi0kxngap1bw0hhl140v8wj].[none:Calculation_1319554740372332544:nk]</field>
            <field>[federated.0c2lahi0kxngap1bw0hhl140v8wj].[none:Calculation_1319554740372332544:ok]</field>
            <field>[federated.0c2lahi0kxngap1bw0hhl140v8wj].[none:Calculation_1319554740376866817:qk]</field>
            <field>[federated.0c2lahi0kxngap1bw0hhl140v8wj].[none:Country:nk]</field>
            <field>[federated.0c2lahi0kxngap1bw0hhl140v8wj].[none:Happiness Score:qk]</field>
            <field>[federated.0c2lahi0kxngap1bw0hhl140v8wj].[none:Year:qk]</field>
            <field>[federated.0c2lahi0kxngap1bw0hhl140v8wj].[tyr:Year:qk]</field>
            <field>[federated.0c2lahi0kxngap1bw0hhl140v8wj].[yr:Year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7CB1AD4A-BAB5-445F-B888-48D6E03375F6}' />
    </window>
    <window class='worksheet' name='Top Country Trend Analysis'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='typeinlist' param='[federated.0c2lahi0kxngap1bw0hhl140v8wj].[none:Country:nk]' type='filter' />
            <card param='[federated.0c2lahi0kxngap1bw0hhl140v8wj].[none:Country:nk]' type='highlighter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0c2lahi0kxngap1bw0hhl140v8wj].[:Measure Names]</field>
            <field>[federated.0c2lahi0kxngap1bw0hhl140v8wj].[none:Calculation_1319554740372332544:nk]</field>
            <field>[federated.0c2lahi0kxngap1bw0hhl140v8wj].[none:Calculation_1319554740372332544:ok]</field>
            <field>[federated.0c2lahi0kxngap1bw0hhl140v8wj].[none:Calculation_1319554740376866817:qk]</field>
            <field>[federated.0c2lahi0kxngap1bw0hhl140v8wj].[none:Country:nk]</field>
            <field>[federated.0c2lahi0kxngap1bw0hhl140v8wj].[none:Happiness Score:qk]</field>
            <field>[federated.0c2lahi0kxngap1bw0hhl140v8wj].[none:Year:qk]</field>
            <field>[federated.0c2lahi0kxngap1bw0hhl140v8wj].[tyr:Year:qk]</field>
            <field>[federated.0c2lahi0kxngap1bw0hhl140v8wj].[yr:Year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1287670F-4E92-4547-AEF8-ACC12DF53E56}' />
    </window>
    <window class='dashboard' name='Main Dashboard'>
      <viewpoints>
        <viewpoint name='Happiness World Map'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{CBFB9040-64BB-4F37-BDE2-7867413E2DE7}' />
    </window>
    <window class='dashboard' name='Finds Reason Dashboard '>
      <viewpoints>
        <viewpoint name='15 Happy Countries'>
          <current-page>
            <multibucket>
              <bucket>#2023-01-01 00:00:00#</bucket>
            </multibucket>
          </current-page>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='15 UnHappy Countries'>
          <current-page>
            <multibucket>
              <bucket>#2023-01-01 00:00:00#</bucket>
            </multibucket>
          </current-page>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Quater World Happiness'>
          <current-page>
            <multibucket>
              <bucket>#2023-01-01 00:00:00#</bucket>
            </multibucket>
          </current-page>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='5' />
      <simple-id uuid='{8ED251D1-F813-4E02-96C6-763B7EA7ED7E}' />
    </window>
    <window class='dashboard' name='Critical Features Dashboard'>
      <viewpoints>
        <viewpoint name='Dependent Features'>
          <current-page>
            <multibucket>
              <bucket>#2023-01-01 00:00:00#</bucket>
            </multibucket>
          </current-page>
          <zoom type='entire-view' />
          <highlight field='[federated.0c2lahi0kxngap1bw0hhl140v8wj].[:Measure Names]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Top Country Factor Analysis '>
          <current-page>
            <multibucket>
              <bucket>#2023-01-01 00:00:00#</bucket>
            </multibucket>
          </current-page>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='11' />
      <simple-id uuid='{64D47F4F-DC40-4769-BCAC-D934617066E8}' />
    </window>
    <window class='dashboard' name='Correlation Dashboard'>
      <viewpoints>
        <viewpoint name='Happiness Score Correlations'>
          <current-page>
            <multibucket>
              <bucket>#2023-01-01 00:00:00#</bucket>
            </multibucket>
          </current-page>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='170' />
      <simple-id uuid='{82463579-274D-47AF-A191-F8B404A21CB5}' />
    </window>
    <window class='dashboard' name='Trend Analysis'>
      <viewpoints>
        <viewpoint name='Down Country Trend Analysis '>
          <zoom type='entire-view' />
          <highlight field='[federated.0c2lahi0kxngap1bw0hhl140v8wj].[none:Country:nk]' type='highlight'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Top Country Trend Analysis'>
          <zoom type='entire-view' />
          <highlight field='[federated.0c2lahi0kxngap1bw0hhl140v8wj].[none:Country:nk]' type='highlight'>
            <bucket-selection />
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='139' />
      <simple-id uuid='{66E47821-9EC0-427E-B383-87420AD89CBA}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='15 Happy Countries' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='15 UnHappy Countries' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Correlation Dashboard' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Critical Features Dashboard' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Dependent Features' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Down Country Trend Analysis ' width='192'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Finds Reason Dashboard ' width='192'>
      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
      j2B6kvj/TViwmFQO4gEAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Happiness Score Correlations' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Happiness World Map' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Main Dashboard' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Quater World Happiness' width='192'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Top Country Factor Analysis ' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Top Country Trend Analysis' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Trend Analysis' width='192'>
      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
      RK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
